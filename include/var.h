const char* Shape_var = ""
	"#ifndef SHAPE_H\n"
	"#define SHAPE_H\n"
	"\n"
	"\n"
	"struct uchar4;\n"
	"struct int2;\n"
	"\n"
	"typedef float3 vec3;\n"
	"typedef float4 vec4;\n"
	"\n"
	"#ifndef __NVCC__\n"
	"__device__ __host__ float min(float a, float b);\n"
	"__device__ __host__ float max(float a, float b);\n"
	"#endif\n"
	"\n"
	"__device__ __host__ vec3 operator+(vec3 a, vec3 b);\n"
	"__device__ __host__ vec3 operator-(vec3 a);\n"
	"__device__ __host__ vec3 operator-(vec3 a, vec3 b);\n"
	"__device__ __host__ vec3 operator*(float a, vec3 b);\n"
	"__device__ __host__ vec3 operator*(vec3 b, float a);\n"
	"__device__ __host__ vec3 operator/(vec3 v, float a);\n"
	"\n"
	"__device__ __host__ vec3 abs(vec3 a);\n"
	"\n"
	"__device__ __host__ vec3 max(vec3 a, vec3 b);\n"
	"__device__ __host__ float length(vec3 a);\n"
	"__device__ __host__ vec3 normalize(vec3 v);\n"
	"__device__ __host__ float dot(vec3 a, vec3 b);\n"
	"\n"
	"enum ShapeType{\n"
	"  SPHERE,\n"
	"  PARALLELEPIPED,\n"
	"  CYLINDER,\n"
	"  TORUS,\n"
	"  OPERATOR,\n"
	"  ALTERATOR,\n"
	"  MAXSHAPE\n"
	"};\n"
	"\n"
	"enum OperatorType{\n"
	"    INTERSECTION,\n"
	"    UNION,\n"
	"    SMOOTHUNION,\n"
	"    SMOOTHSUB,\n"
	"    MIXER,\n"
	"    MAXOPERATOR\n"
	"};\n"
	"\n"
	"enum AlteratorType{\n"
	"  TWIST,\n"
	"  MAXALTERATOR\n"
	"};\n"
	"\n"
	"struct sphere_k{\n"
	"  vec3 center;\n"
	"  float radius;\n"
	"};\n"
	"\n"
	"struct torus_k{\n"
	"  vec3 center;\n"
	"  float centerRadius, tubeRadius;\n"
	"};\n"
	"\n"
	"struct parallelepiped_k{\n"
	"  vec3 vertex;\n"
	"  vec3 size;\n"
	"};\n"
	"\n"
	"struct cylinder_k{\n"
	"  vec3 center;\n"
	"  float radius, height;\n"
	"};\n"
	"\n"
	"struct operator_k{\n"
	"  int n;\n"
	"  OperatorType type;\n"
	"  float k, k1, k2, k3;\n"
	"};\n"
	"\n"
	"struct alterator_k{\n"
	"  AlteratorType type;\n"
	"  float k, k1, k2, k3;\n"
	"};\n"
	"\n"
	"\n"
	"typedef struct{\n"
	"  ShapeType type;\n"
	"  union{\n"
	"    sphere_k sphere;\n"
	"    parallelepiped_k parallelepiped;\n"
	"    cylinder_k cylinder;\n"
	"    operator_k op;\n"
	"    alterator_k alt;\n"
	"    torus_k torus;\n"
	"  };\n"
	"  vec4 color;\n"
	"  size_t child, sibling;\n"
	"  size_t distanceProg;\n"
	"} shape_k;\n"
	"\n"
	"typedef struct{\n"
	"  vec3 pos;\n"
	"  float intensity;\n"
	"} light_k;\n"
	"\n"
	"typedef struct{\n"
	"  float k_diffusion, k_reflection, k_refraction;\n"
	"  vec4 color;\n"
	"} surface_k;\n"
	"\n"
	"\n"
	"#endif\n"
;

const char* ShapeFunctions_var = ""
	"#ifndef SHAPEFUNCTIONS_H\n"
	"#define SHAPEFUNCTIONS_H\n"
	"\n"
	"#include <Shape.h>\n"
	"\n"
	"typedef float (*general_sdf_func) (shape_k*, size_t, vec3);\n"
	"\n"
	"__device__\n"
	"float clamp(float _x, float _min, float _max){\n"
	"  return max(min(_x, _max), _min);\n"
	"}\n"
	"\n"
	"__device__\n"
	"float mix(float a, float b, float t){\n"
	"  return (b - a) * t + a;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceParallelepiped(shape_k sh, vec3 pos){\n"
	"  parallelepiped_k s = sh.parallelepiped;\n"
	"  vec3 q = abs(pos - s.vertex - 0.5f * s.size) - 0.5f * s.size;\n"
	"  return length(max(q, make_float3(0.0, 0.0, 0.0))) + min(max(q.x, max(q.y, q.z)), 0.0f);\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceSphere(shape_k sh, vec3 pos){\n"
	"  sphere_k s = sh.sphere;\n"
	"  return sqrtf((pos.x - s.center.x) * (pos.x - s.center.x) +\n"
	"    (pos.y - s.center.y) * (pos.y - s.center.y) +\n"
	"    (pos.z - s.center.z) * (pos.z - s.center.z)) - s.radius;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceTorus(shape_k sh, vec3 pos){\n"
	"  torus_k t = sh.torus;\n"
	"  vec3 nearestPoint;\n"
	"  float module, dx, dz;\n"
	"  dx = pos.x - t.center.x;\n"
	"  dz = pos.z - t.center.z;\n"
	"  module = t.centerRadius / sqrtf(dz * dz + dx * dx);\n"
	"  nearestPoint.y = t.center.y;\n"
	"  nearestPoint.x = dx * module + t.center.x;\n"
	"  nearestPoint.z = dz * module + t.center.z;\n"
	"\n"
	"  return sqrtf((pos.x - nearestPoint.x) * (pos.x - nearestPoint.x) +\n"
	"    (pos.y - nearestPoint.y) * (pos.y - nearestPoint.y) +\n"
	"    (pos.z - nearestPoint.z) * (pos.z - nearestPoint.z)) - t.tubeRadius;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceCylinder(shape_k sh, vec3 pos){\n"
	"  cylinder_k cylinder = sh.cylinder;\n"
	"  float distAxis, distMid, dist;\n"
	"  distAxis = sqrtf((pos.x - cylinder.center.x) * (pos.x - cylinder.center.x) + (pos.z - cylinder.center.z) * (pos.z - cylinder.center.z)) - cylinder.radius;\n"
	"  distMid = abs(pos.y - cylinder.center.y) - 0.5 * cylinder.height;\n"
	"\n"
	"  if(distMid > 0){\n"
	"    if(distAxis < 0){\n"
	"      dist = distMid;\n"
	"    }else{\n"
	"      dist = sqrtf(distMid * distMid + distAxis * distAxis);\n"
	"    }\n"
	"  }else{\n"
	"    dist = distAxis;\n"
	"  }\n"
	"\n"
	"  if(dist < 0){\n"
	"    dist = max(distAxis, distMid);\n"
	"  }\n"
	"\n"
	"  return dist;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float MDFunion(operator_k op, float d1, float d2, size_t idx, size_t max){ return min(d1, d2); }\n"
	"\n"
	"__device__\n"
	"float MDFintersection(operator_k op, float d1, float d2, size_t idx, size_t _max){ return max(d1, d2); }\n"
	"\n"
	"__device__\n"
	"float MDFsmoothunion(operator_k op, float d1, float d2, size_t idx, size_t max){\n"
	"  float h = clamp( 0.5 + 0.5 * (d2 - d1) / op.k, 0.0, 1.0 );\n"
	"  return mix(d2, d1, h) - op.k * h * (1.0 - h);\n"
	"}\n"
	"\n"
	"__device__\n"
	"float MDFsmoothsub(operator_k op, float d1, float d2, size_t idx, size_t max) {\n"
	"  float h = clamp( 0.5 - 0.5*(d2 + d1) / op.k, 0.0, 1.0 );\n"
	"  return mix( d2, -d1, h ) + op.k * h * (1.0-h);\n"
	"}\n"
	"\n"
	"__device__\n"
	"float MDFmixer(operator_k op, float d1, float d2, size_t idx, size_t max){\n"
	"  float endPart, startPart, ret;\n"
	"\n"
	"  endPart = (((float)idx) / (max - 1));\n"
	"  startPart = (((float)idx - 1) / (max - 1));\n"
	"\n"
	"  if(op.k > endPart){\n"
	"    ret = d2;\n"
	"  } if(op.k < startPart){\n"
	"    ret = d1;\n"
	"  }else{\n"
	"    ret = (d2 - d1) * (op.k - startPart) / (endPart - startPart) + d1;\n"
	"  }\n"
	"  return ret;\n"
	"}\n"
	"\n"
	"__device__\n"
	"vec3 AIFtwist(alterator_k alt, vec3 p){\n"
	"  const float k = alt.k;\n"
	"  float c = cos(k * p.y);\n"
	"  float s = sin(k * p.y);\n"
	"  vec3  q = make_float3(c * p.x - s * p.z, p.y,  s * p.x + c * p.z);\n"
	"  return q;\n"
	"}\n"
	"\n"
	"\n"
	"\n"
	"//////// ************************ PROVA ***************************\n"
	"\n"
	"/*__device__\n"
	"float absf(float a){ return a > 0 ? a : -a; }\n"
	"\n"
	"__device__\n"
	"float clamp(float _x, float _min, float _max){\n"
	"  float res = _x > _max ? _max : _x;\n"
	"  return res > _min ? res : _min;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float mix(float a, float b, float t){\n"
	"  return (b - a) * t + a;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceParallelepiped(shape_k sh, vec3 pos){\n"
	"  parallelepiped_k s = sh.parallelepiped;\n"
	"  vec3 q = make_float3(\n"
	"    absf(pos.x - s.vertex.x - 0.5f * s.size.x),\n"
	"    absf(pos.y - s.vertex.y - 0.5f * s.size.y),\n"
	"    absf(pos.z - s.vertex.z - 0.5f * s.size.z)\n"
	"  );\n"
	"  q.x = (q.x > 0.5f * s.size.x) ? q.x - 0.5f * s.size.x : 0.0f;\n"
	"  q.y = (q.y > 0.5f * s.size.y) ? q.y - 0.5f * s.size.y : 0.0f;\n"
	"  q.z = (q.z > 0.5f * s.size.z) ? q.z - 0.5f * s.size.z : 0.0f;\n"
	"  return sqrtf(q.x * q.x + q.y * q.y + q.z * q.z);\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceSphere(shape_k sh, vec3 pos){\n"
	"  sphere_k s = sh.sphere;\n"
	"  return sqrtf(\n"
	"    (pos.x - s.center.x) * (pos.x - s.center.x) +\n"
	"    (pos.y - s.center.y) * (pos.y - s.center.y) +\n"
	"    (pos.z - s.center.z) * (pos.z - s.center.z)\n"
	"  ) - s.radius;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceTorus(shape_k sh, vec3 pos){\n"
	"  torus_k t = sh.torus;\n"
	"  vec3 nearestPoint;\n"
	"  float module, dx, dz;\n"
	"  dx = pos.x - t.center.x;\n"
	"  dz = pos.z - t.center.z;\n"
	"  module = t.centerRadius / sqrtf(dz * dz + dx * dx);\n"
	"  nearestPoint.y = t.center.y;\n"
	"  nearestPoint.x = dx * module + t.center.x;\n"
	"  nearestPoint.z = dz * module + t.center.z;\n"
	"\n"
	"  return sqrtf((pos.x - nearestPoint.x) * (pos.x - nearestPoint.x) +\n"
	"    (pos.y - nearestPoint.y) * (pos.y - nearestPoint.y) +\n"
	"    (pos.z - nearestPoint.z) * (pos.z - nearestPoint.z)) - t.tubeRadius;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float distanceCylinder(shape_k sh, vec3 pos){\n"
	"  cylinder_k cylinder = sh.cylinder;\n"
	"  float distAxis, distMid, dist;\n"
	"  distAxis = sqrtf((pos.x - cylinder.center.x) * (pos.x - cylinder.center.x) + (pos.z - cylinder.center.z) * (pos.z - cylinder.center.z)) - cylinder.radius;\n"
	"  distMid = abs(pos.y - cylinder.center.y) - 0.5 * cylinder.height;\n"
	"\n"
	"  if(distMid > 0){\n"
	"    if(distAxis < 0){\n"
	"      dist = distMid;\n"
	"    }else{\n"
	"      dist = sqrtf(distMid * distMid + distAxis * distAxis);\n"
	"    }\n"
	"  }else{\n"
	"    dist = distAxis;\n"
	"  }\n"
	"\n"
	"  if(dist < 0){\n"
	"    dist = max(distAxis, distMid);\n"
	"  }\n"
	"\n"
	"  return dist;\n"
	"}\n"
	"\n"
	"__device__\n"
	"float MDFunion(operator_k op, float d1, float d2, size_t idx, size_t max){ return min(d1, d2); }\n"
	"\n"
	"__device__\n"
	"float MDFintersection(operator_k op, float d1, float d2, size_t idx, size_t _max){ return max(d1, d2); }\n"
	"\n"
	"__device__\n"
	"float MDFsmoothunion(operator_k op, float d1, float d2, size_t idx, size_t max){\n"
	"  float h = clamp( 0.5 + 0.5 * (d2 - d1) / op.k, 0.0, 1.0 );\n"
	"  return mix(d2, d1, h) - op.k * h * (1.0 - h);\n"
	"}\n"
	"\n"
	"__device__\n"
	"float MDFsmoothsub(operator_k op, float d1, float d2, size_t idx, size_t max) {\n"
	"  float h = clamp( 0.5 - 0.5*(d2 + d1) / op.k, 0.0, 1.0 );\n"
	"  return mix( d2, -d1, h ) + op.k * h * (1.0-h);\n"
	"}\n"
	"\n"
	"__device__\n"
	"float MDFmixer(operator_k op, float d1, float d2, size_t idx, size_t max){\n"
	"  float endPart, startPart, ret;\n"
	"\n"
	"  endPart = (((float)idx) / (max - 1));\n"
	"  startPart = (((float)idx - 1) / (max - 1));\n"
	"\n"
	"  if(op.k > endPart){\n"
	"    ret = d2;\n"
	"  } if(op.k < startPart){\n"
	"    ret = d1;\n"
	"  }else{\n"
	"    ret = (d2 - d1) * (op.k - startPart) / (endPart - startPart) + d1;\n"
	"  }\n"
	"  return ret;\n"
	"}\n"
	"\n"
	"__device__\n"
	"vec3 AIFtwist(alterator_k alt, vec3 p){\n"
	"  const float k = alt.k;\n"
	"  float c = cos(k * p.y);\n"
	"  float s = sin(k * p.y);\n"
	"  vec3  q = make_float3(c * p.x - s * p.z, p.y,  s * p.x + c * p.z);\n"
	"  return q;\n"
	"}*/\n"
	"\n"
	"#endif\n"
;

const char* vecUtility_var = ""
	"//\n"
	"// Generated by NVIDIA NVVM Compiler\n"
	"//\n"
	"// Compiler Build ID: CL-26907403\n"
	"// Cuda compilation tools, release 10.1, V10.1.243\n"
	"// Based on LLVM 3.4svn\n"
	"//\n"
	"\n"
	".version 6.4\n"
	".target sm_30\n"
	".address_size 64\n"
	"\n"
	"	// .globl	_Zpl6float3S_\n"
	"\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Zpl6float3S_(\n"
	"	.param .align 4 .b8 _Zpl6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Zpl6float3S__param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<10>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Zpl6float3S__param_0+8];\n"
	"	ld.param.f32 	%f2, [_Zpl6float3S__param_0+4];\n"
	"	ld.param.f32 	%f3, [_Zpl6float3S__param_0];\n"
	"	ld.param.f32 	%f4, [_Zpl6float3S__param_1+8];\n"
	"	ld.param.f32 	%f5, [_Zpl6float3S__param_1+4];\n"
	"	ld.param.f32 	%f6, [_Zpl6float3S__param_1];\n"
	"	add.f32 	%f7, %f3, %f6;\n"
	"	add.f32 	%f8, %f2, %f5;\n"
	"	add.f32 	%f9, %f1, %f4;\n"
	"	st.param.f32	[func_retval0+0], %f7;\n"
	"	st.param.f32	[func_retval0+4], %f8;\n"
	"	st.param.f32	[func_retval0+8], %f9;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Zng6float3\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Zng6float3(\n"
	"	.param .align 4 .b8 _Zng6float3_param_0[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<7>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Zng6float3_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Zng6float3_param_0+4];\n"
	"	ld.param.f32 	%f3, [_Zng6float3_param_0];\n"
	"	neg.f32 	%f4, %f3;\n"
	"	neg.f32 	%f5, %f2;\n"
	"	neg.f32 	%f6, %f1;\n"
	"	st.param.f32	[func_retval0+0], %f4;\n"
	"	st.param.f32	[func_retval0+4], %f5;\n"
	"	st.param.f32	[func_retval0+8], %f6;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Zmi6float3S_\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Zmi6float3S_(\n"
	"	.param .align 4 .b8 _Zmi6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Zmi6float3S__param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<10>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Zmi6float3S__param_0+8];\n"
	"	ld.param.f32 	%f2, [_Zmi6float3S__param_0+4];\n"
	"	ld.param.f32 	%f3, [_Zmi6float3S__param_0];\n"
	"	ld.param.f32 	%f4, [_Zmi6float3S__param_1+8];\n"
	"	ld.param.f32 	%f5, [_Zmi6float3S__param_1+4];\n"
	"	ld.param.f32 	%f6, [_Zmi6float3S__param_1];\n"
	"	sub.f32 	%f7, %f3, %f6;\n"
	"	sub.f32 	%f8, %f2, %f5;\n"
	"	sub.f32 	%f9, %f1, %f4;\n"
	"	st.param.f32	[func_retval0+0], %f7;\n"
	"	st.param.f32	[func_retval0+4], %f8;\n"
	"	st.param.f32	[func_retval0+8], %f9;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Zmlf6float3\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Zmlf6float3(\n"
	"	.param .b32 _Zmlf6float3_param_0,\n"
	"	.param .align 4 .b8 _Zmlf6float3_param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<8>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Zmlf6float3_param_0];\n"
	"	ld.param.f32 	%f2, [_Zmlf6float3_param_1+8];\n"
	"	ld.param.f32 	%f3, [_Zmlf6float3_param_1+4];\n"
	"	ld.param.f32 	%f4, [_Zmlf6float3_param_1];\n"
	"	mul.f32 	%f5, %f4, %f1;\n"
	"	mul.f32 	%f6, %f3, %f1;\n"
	"	mul.f32 	%f7, %f2, %f1;\n"
	"	st.param.f32	[func_retval0+0], %f5;\n"
	"	st.param.f32	[func_retval0+4], %f6;\n"
	"	st.param.f32	[func_retval0+8], %f7;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Zml6float3f\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Zml6float3f(\n"
	"	.param .align 4 .b8 _Zml6float3f_param_0[12],\n"
	"	.param .b32 _Zml6float3f_param_1\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<8>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Zml6float3f_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Zml6float3f_param_0+4];\n"
	"	ld.param.f32 	%f3, [_Zml6float3f_param_0];\n"
	"	ld.param.f32 	%f4, [_Zml6float3f_param_1];\n"
	"	mul.f32 	%f5, %f3, %f4;\n"
	"	mul.f32 	%f6, %f2, %f4;\n"
	"	mul.f32 	%f7, %f1, %f4;\n"
	"	st.param.f32	[func_retval0+0], %f5;\n"
	"	st.param.f32	[func_retval0+4], %f6;\n"
	"	st.param.f32	[func_retval0+8], %f7;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Zdv6float3f\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Zdv6float3f(\n"
	"	.param .align 4 .b8 _Zdv6float3f_param_0[12],\n"
	"	.param .b32 _Zdv6float3f_param_1\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<8>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Zdv6float3f_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Zdv6float3f_param_0+4];\n"
	"	ld.param.f32 	%f3, [_Zdv6float3f_param_0];\n"
	"	ld.param.f32 	%f4, [_Zdv6float3f_param_1];\n"
	"	div.rn.f32 	%f5, %f3, %f4;\n"
	"	div.rn.f32 	%f6, %f2, %f4;\n"
	"	div.rn.f32 	%f7, %f1, %f4;\n"
	"	st.param.f32	[func_retval0+0], %f5;\n"
	"	st.param.f32	[func_retval0+4], %f6;\n"
	"	st.param.f32	[func_retval0+8], %f7;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Z3abs6float3\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Z3abs6float3(\n"
	"	.param .align 4 .b8 _Z3abs6float3_param_0[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<7>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z3abs6float3_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Z3abs6float3_param_0+4];\n"
	"	ld.param.f32 	%f3, [_Z3abs6float3_param_0];\n"
	"	abs.f32 	%f4, %f3;\n"
	"	abs.f32 	%f5, %f2;\n"
	"	abs.f32 	%f6, %f1;\n"
	"	st.param.f32	[func_retval0+0], %f4;\n"
	"	st.param.f32	[func_retval0+4], %f5;\n"
	"	st.param.f32	[func_retval0+8], %f6;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Z3max6float3S_\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Z3max6float3S_(\n"
	"	.param .align 4 .b8 _Z3max6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Z3max6float3S__param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<10>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z3max6float3S__param_0+8];\n"
	"	ld.param.f32 	%f2, [_Z3max6float3S__param_0+4];\n"
	"	ld.param.f32 	%f3, [_Z3max6float3S__param_0];\n"
	"	ld.param.f32 	%f4, [_Z3max6float3S__param_1+8];\n"
	"	ld.param.f32 	%f5, [_Z3max6float3S__param_1+4];\n"
	"	ld.param.f32 	%f6, [_Z3max6float3S__param_1];\n"
	"	max.f32 	%f7, %f3, %f6;\n"
	"	max.f32 	%f8, %f2, %f5;\n"
	"	max.f32 	%f9, %f1, %f4;\n"
	"	st.param.f32	[func_retval0+0], %f7;\n"
	"	st.param.f32	[func_retval0+4], %f8;\n"
	"	st.param.f32	[func_retval0+8], %f9;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Z6length6float3\n"
	".visible .func  (.param .b32 func_retval0) _Z6length6float3(\n"
	"	.param .align 4 .b8 _Z6length6float3_param_0[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<8>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z6length6float3_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Z6length6float3_param_0];\n"
	"	ld.param.f32 	%f3, [_Z6length6float3_param_0+4];\n"
	"	mul.f32 	%f4, %f3, %f3;\n"
	"	fma.rn.f32 	%f5, %f2, %f2, %f4;\n"
	"	fma.rn.f32 	%f6, %f1, %f1, %f5;\n"
	"	sqrt.rn.f32 	%f7, %f6;\n"
	"	st.param.f32	[func_retval0+0], %f7;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Z9normalize6float3\n"
	".visible .func  (.param .align 4 .b8 func_retval0[12]) _Z9normalize6float3(\n"
	"	.param .align 4 .b8 _Z9normalize6float3_param_0[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<11>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z9normalize6float3_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Z9normalize6float3_param_0];\n"
	"	ld.param.f32 	%f3, [_Z9normalize6float3_param_0+4];\n"
	"	mul.f32 	%f4, %f3, %f3;\n"
	"	fma.rn.f32 	%f5, %f2, %f2, %f4;\n"
	"	fma.rn.f32 	%f6, %f1, %f1, %f5;\n"
	"	sqrt.rn.f32 	%f7, %f6;\n"
	"	div.rn.f32 	%f8, %f2, %f7;\n"
	"	div.rn.f32 	%f9, %f3, %f7;\n"
	"	div.rn.f32 	%f10, %f1, %f7;\n"
	"	st.param.f32	[func_retval0+0], %f8;\n"
	"	st.param.f32	[func_retval0+4], %f9;\n"
	"	st.param.f32	[func_retval0+8], %f10;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	_Z3dot6float3S_\n"
	".visible .func  (.param .b32 func_retval0) _Z3dot6float3S_(\n"
	"	.param .align 4 .b8 _Z3dot6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Z3dot6float3S__param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<10>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z3dot6float3S__param_0+8];\n"
	"	ld.param.f32 	%f2, [_Z3dot6float3S__param_0];\n"
	"	ld.param.f32 	%f3, [_Z3dot6float3S__param_0+4];\n"
	"	ld.param.f32 	%f4, [_Z3dot6float3S__param_1+8];\n"
	"	ld.param.f32 	%f5, [_Z3dot6float3S__param_1];\n"
	"	ld.param.f32 	%f6, [_Z3dot6float3S__param_1+4];\n"
	"	mul.f32 	%f7, %f3, %f6;\n"
	"	fma.rn.f32 	%f8, %f2, %f5, %f7;\n"
	"	fma.rn.f32 	%f9, %f1, %f4, %f8;\n"
	"	st.param.f32	[func_retval0+0], %f9;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"\n"
;

const char* kernel_var = ""
	"//\n"
	"// Generated by NVIDIA NVVM Compiler\n"
	"//\n"
	"// Compiler Build ID: CL-26907403\n"
	"// Cuda compilation tools, release 10.1, V10.1.243\n"
	"// Based on LLVM 3.4svn\n"
	"//\n"
	"\n"
	".version 6.4\n"
	".target sm_30\n"
	".address_size 64\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z14distanceSphere7shape_k6float3\n"
	"(\n"
	"	.param .align 16 .b8 _Z14distanceSphere7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z14distanceSphere7shape_k6float3_param_1[12]\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z22distanceParallelepiped7shape_k6float3\n"
	"(\n"
	"	.param .align 16 .b8 _Z22distanceParallelepiped7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z22distanceParallelepiped7shape_k6float3_param_1[12]\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z16distanceCylinder7shape_k6float3\n"
	"(\n"
	"	.param .align 16 .b8 _Z16distanceCylinder7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z16distanceCylinder7shape_k6float3_param_1[12]\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z13distanceTorus7shape_k6float3\n"
	"(\n"
	"	.param .align 16 .b8 _Z13distanceTorus7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z13distanceTorus7shape_k6float3_param_1[12]\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z15MDFintersection10operator_kffmm\n"
	"(\n"
	"	.param .align 4 .b8 _Z15MDFintersection10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z15MDFintersection10operator_kffmm_param_1,\n"
	"	.param .b32 _Z15MDFintersection10operator_kffmm_param_2,\n"
	"	.param .b64 _Z15MDFintersection10operator_kffmm_param_3,\n"
	"	.param .b64 _Z15MDFintersection10operator_kffmm_param_4\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z8MDFunion10operator_kffmm\n"
	"(\n"
	"	.param .align 4 .b8 _Z8MDFunion10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z8MDFunion10operator_kffmm_param_1,\n"
	"	.param .b32 _Z8MDFunion10operator_kffmm_param_2,\n"
	"	.param .b64 _Z8MDFunion10operator_kffmm_param_3,\n"
	"	.param .b64 _Z8MDFunion10operator_kffmm_param_4\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z14MDFsmoothunion10operator_kffmm\n"
	"(\n"
	"	.param .align 4 .b8 _Z14MDFsmoothunion10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z14MDFsmoothunion10operator_kffmm_param_1,\n"
	"	.param .b32 _Z14MDFsmoothunion10operator_kffmm_param_2,\n"
	"	.param .b64 _Z14MDFsmoothunion10operator_kffmm_param_3,\n"
	"	.param .b64 _Z14MDFsmoothunion10operator_kffmm_param_4\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z12MDFsmoothsub10operator_kffmm\n"
	"(\n"
	"	.param .align 4 .b8 _Z12MDFsmoothsub10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z12MDFsmoothsub10operator_kffmm_param_1,\n"
	"	.param .b32 _Z12MDFsmoothsub10operator_kffmm_param_2,\n"
	"	.param .b64 _Z12MDFsmoothsub10operator_kffmm_param_3,\n"
	"	.param .b64 _Z12MDFsmoothsub10operator_kffmm_param_4\n"
	")\n"
	";\n"
	".func  (.param .b32 func_retval0) _Z8MDFmixer10operator_kffmm\n"
	"(\n"
	"	.param .align 4 .b8 _Z8MDFmixer10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z8MDFmixer10operator_kffmm_param_1,\n"
	"	.param .b32 _Z8MDFmixer10operator_kffmm_param_2,\n"
	"	.param .b64 _Z8MDFmixer10operator_kffmm_param_3,\n"
	"	.param .b64 _Z8MDFmixer10operator_kffmm_param_4\n"
	")\n"
	";\n"
	".func  (.param .align 4 .b8 func_retval0[12]) _Z8AIFtwist11alterator_k6float3\n"
	"(\n"
	"	.param .align 4 .b8 _Z8AIFtwist11alterator_k6float3_param_0[20],\n"
	"	.param .align 4 .b8 _Z8AIFtwist11alterator_k6float3_param_1[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Zmi6float3S_\n"
	"(\n"
	"	.param .align 4 .b8 _Zmi6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Zmi6float3S__param_1[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Z3abs6float3\n"
	"(\n"
	"	.param .align 4 .b8 _Z3abs6float3_param_0[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Zmlf6float3\n"
	"(\n"
	"	.param .b32 _Zmlf6float3_param_0,\n"
	"	.param .align 4 .b8 _Zmlf6float3_param_1[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .b32 func_retval0) _Z6length6float3\n"
	"(\n"
	"	.param .align 4 .b8 _Z6length6float3_param_0[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Z3max6float3S_\n"
	"(\n"
	"	.param .align 4 .b8 _Z3max6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Z3max6float3S__param_1[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Z9normalize6float3\n"
	"(\n"
	"	.param .align 4 .b8 _Z9normalize6float3_param_0[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Zdv6float3f\n"
	"(\n"
	"	.param .align 4 .b8 _Zdv6float3f_param_0[12],\n"
	"	.param .b32 _Zdv6float3f_param_1\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Zpl6float3S_\n"
	"(\n"
	"	.param .align 4 .b8 _Zpl6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Zpl6float3S__param_1[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .b32 func_retval0) _Z3dot6float3S_\n"
	"(\n"
	"	.param .align 4 .b8 _Z3dot6float3S__param_0[12],\n"
	"	.param .align 4 .b8 _Z3dot6float3S__param_1[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Zng6float3\n"
	"(\n"
	"	.param .align 4 .b8 _Zng6float3_param_0[12]\n"
	")\n"
	";\n"
	".extern .func  (.param .align 4 .b8 func_retval0[12]) _Zml6float3f\n"
	"(\n"
	"	.param .align 4 .b8 _Zml6float3f_param_0[12],\n"
	"	.param .b32 _Zml6float3f_param_1\n"
	")\n"
	";\n"
	".extern .func  (.param .b64 func_retval0) malloc\n"
	"(\n"
	"	.param .b64 malloc_param_0\n"
	")\n"
	";\n"
	".extern .func free\n"
	"(\n"
	"	.param .b64 free_param_0\n"
	")\n"
	";\n"
	".func  (.param .b64 func_retval0) __internal_accurate_pow\n"
	"(\n"
	"	.param .b64 __internal_accurate_pow_param_0\n"
	")\n"
	";\n"
	".global .align 8 .u64 SDF[6] = {_Z14distanceSphere7shape_k6float3, _Z22distanceParallelepiped7shape_k6float3, _Z16distanceCylinder7shape_k6float3, _Z13distanceTorus7shape_k6float3, 0, 0};\n"
	".global .align 8 .u64 MDF[5] = {_Z15MDFintersection10operator_kffmm, _Z8MDFunion10operator_kffmm, _Z14MDFsmoothunion10operator_kffmm, _Z12MDFsmoothsub10operator_kffmm, _Z8MDFmixer10operator_kffmm};\n"
	".global .align 8 .u64 AIF[1] = {_Z8AIFtwist11alterator_k6float3};\n"
	".global .align 8 .u64 sdfShapes;\n"
	"// _ZZ8firstRayE6__addr has been demoted\n"
	"// _ZZ8firstRayE1n has been demoted\n"
	".const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z14distanceSphere7shape_k6float3(\n"
	"	.param .align 16 .b8 _Z14distanceSphere7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z14distanceSphere7shape_k6float3_param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<16>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z14distanceSphere7shape_k6float3_param_0+16];\n"
	"	ld.param.f32 	%f2, [_Z14distanceSphere7shape_k6float3_param_0+12];\n"
	"	ld.param.f32 	%f3, [_Z14distanceSphere7shape_k6float3_param_0+8];\n"
	"	ld.param.f32 	%f4, [_Z14distanceSphere7shape_k6float3_param_0+4];\n"
	"	ld.param.f32 	%f5, [_Z14distanceSphere7shape_k6float3_param_1+8];\n"
	"	ld.param.f32 	%f6, [_Z14distanceSphere7shape_k6float3_param_1+4];\n"
	"	ld.param.f32 	%f7, [_Z14distanceSphere7shape_k6float3_param_1];\n"
	"	sub.f32 	%f8, %f7, %f4;\n"
	"	sub.f32 	%f9, %f6, %f3;\n"
	"	mul.f32 	%f10, %f9, %f9;\n"
	"	fma.rn.f32 	%f11, %f8, %f8, %f10;\n"
	"	sub.f32 	%f12, %f5, %f2;\n"
	"	fma.rn.f32 	%f13, %f12, %f12, %f11;\n"
	"	sqrt.rn.f32 	%f14, %f13;\n"
	"	sub.f32 	%f15, %f14, %f1;\n"
	"	st.param.f32	[func_retval0+0], %f15;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z22distanceParallelepiped7shape_k6float3(\n"
	"	.param .align 16 .b8 _Z22distanceParallelepiped7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z22distanceParallelepiped7shape_k6float3_param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<38>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z22distanceParallelepiped7shape_k6float3_param_0+16];\n"
	"	ld.param.f32 	%f2, [_Z22distanceParallelepiped7shape_k6float3_param_0+20];\n"
	"	ld.param.f32 	%f3, [_Z22distanceParallelepiped7shape_k6float3_param_0+24];\n"
	"	ld.param.f32 	%f4, [_Z22distanceParallelepiped7shape_k6float3_param_0+4];\n"
	"	ld.param.f32 	%f5, [_Z22distanceParallelepiped7shape_k6float3_param_0+8];\n"
	"	ld.param.f32 	%f6, [_Z22distanceParallelepiped7shape_k6float3_param_0+12];\n"
	"	ld.param.f32 	%f7, [_Z22distanceParallelepiped7shape_k6float3_param_1];\n"
	"	ld.param.f32 	%f8, [_Z22distanceParallelepiped7shape_k6float3_param_1+4];\n"
	"	ld.param.f32 	%f9, [_Z22distanceParallelepiped7shape_k6float3_param_1+8];\n"
	"	// Callseq Start 0\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f7;\n"
	"	st.param.f32	[param0+4], %f8;\n"
	"	st.param.f32	[param0+8], %f9;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f4;\n"
	"	st.param.f32	[param1+4], %f5;\n"
	"	st.param.f32	[param1+8], %f6;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f10, [retval0+0];\n"
	"	ld.param.f32	%f11, [retval0+4];\n"
	"	ld.param.f32	%f12, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 0\n"
	"	mov.f32 	%f13, 0f3F000000;\n"
	"	// Callseq Start 1\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f13;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f14, [retval0+0];\n"
	"	ld.param.f32	%f15, [retval0+4];\n"
	"	ld.param.f32	%f16, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 1\n"
	"	// Callseq Start 2\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f10;\n"
	"	st.param.f32	[param0+4], %f11;\n"
	"	st.param.f32	[param0+8], %f12;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f14;\n"
	"	st.param.f32	[param1+4], %f15;\n"
	"	st.param.f32	[param1+8], %f16;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f17, [retval0+0];\n"
	"	ld.param.f32	%f18, [retval0+4];\n"
	"	ld.param.f32	%f19, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 2\n"
	"	// Callseq Start 3\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f17;\n"
	"	st.param.f32	[param0+4], %f18;\n"
	"	st.param.f32	[param0+8], %f19;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Z3abs6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f20, [retval0+0];\n"
	"	ld.param.f32	%f21, [retval0+4];\n"
	"	ld.param.f32	%f22, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 3\n"
	"	// Callseq Start 4\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f13;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f23, [retval0+0];\n"
	"	ld.param.f32	%f24, [retval0+4];\n"
	"	ld.param.f32	%f25, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 4\n"
	"	// Callseq Start 5\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f20;\n"
	"	st.param.f32	[param0+4], %f21;\n"
	"	st.param.f32	[param0+8], %f22;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f23;\n"
	"	st.param.f32	[param1+4], %f24;\n"
	"	st.param.f32	[param1+8], %f25;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f26, [retval0+0];\n"
	"	ld.param.f32	%f27, [retval0+4];\n"
	"	ld.param.f32	%f28, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 5\n"
	"	mov.f32 	%f29, 0f00000000;\n"
	"	// Callseq Start 6\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f26;\n"
	"	st.param.f32	[param0+4], %f27;\n"
	"	st.param.f32	[param0+8], %f28;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f29;\n"
	"	st.param.f32	[param1+4], %f29;\n"
	"	st.param.f32	[param1+8], %f29;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Z3max6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f30, [retval0+0];\n"
	"	ld.param.f32	%f31, [retval0+4];\n"
	"	ld.param.f32	%f32, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 6\n"
	"	// Callseq Start 7\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f30;\n"
	"	st.param.f32	[param0+4], %f31;\n"
	"	st.param.f32	[param0+8], %f32;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f33, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 7\n"
	"	max.f32 	%f34, %f27, %f28;\n"
	"	max.f32 	%f35, %f26, %f34;\n"
	"	min.f32 	%f36, %f35, %f29;\n"
	"	add.f32 	%f37, %f33, %f36;\n"
	"	st.param.f32	[func_retval0+0], %f37;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z16distanceCylinder7shape_k6float3(\n"
	"	.param .align 16 .b8 _Z16distanceCylinder7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z16distanceCylinder7shape_k6float3_param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .pred 	%p<4>;\n"
	"	.reg .f32 	%f<26>;\n"
	"	.reg .f64 	%fd<4>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f7, [_Z16distanceCylinder7shape_k6float3_param_0+20];\n"
	"	ld.param.f32 	%f8, [_Z16distanceCylinder7shape_k6float3_param_0+8];\n"
	"	ld.param.f32 	%f9, [_Z16distanceCylinder7shape_k6float3_param_0+16];\n"
	"	ld.param.f32 	%f10, [_Z16distanceCylinder7shape_k6float3_param_0+12];\n"
	"	ld.param.f32 	%f11, [_Z16distanceCylinder7shape_k6float3_param_0+4];\n"
	"	ld.param.f32 	%f12, [_Z16distanceCylinder7shape_k6float3_param_1+4];\n"
	"	ld.param.f32 	%f13, [_Z16distanceCylinder7shape_k6float3_param_1+8];\n"
	"	ld.param.f32 	%f14, [_Z16distanceCylinder7shape_k6float3_param_1];\n"
	"	sub.f32 	%f15, %f14, %f11;\n"
	"	sub.f32 	%f16, %f13, %f10;\n"
	"	mul.f32 	%f17, %f16, %f16;\n"
	"	fma.rn.f32 	%f18, %f15, %f15, %f17;\n"
	"	sqrt.rn.f32 	%f19, %f18;\n"
	"	sub.f32 	%f1, %f19, %f9;\n"
	"	sub.f32 	%f20, %f12, %f8;\n"
	"	abs.f32 	%f21, %f20;\n"
	"	cvt.f64.f32	%fd1, %f21;\n"
	"	cvt.f64.f32	%fd2, %f7;\n"
	"	fma.rn.f64 	%fd3, %fd2, 0dBFE0000000000000, %fd1;\n"
	"	cvt.rn.f32.f64	%f2, %fd3;\n"
	"	setp.leu.f32	%p1, %f2, 0f00000000;\n"
	"	mov.f32 	%f24, %f1;\n"
	"	@%p1 bra 	BB2_3;\n"
	"\n"
	"	setp.lt.f32	%p2, %f1, 0f00000000;\n"
	"	mov.f32 	%f24, %f2;\n"
	"	@%p2 bra 	BB2_3;\n"
	"\n"
	"	mul.f32 	%f22, %f2, %f2;\n"
	"	fma.rn.f32 	%f23, %f1, %f1, %f22;\n"
	"	sqrt.rn.f32 	%f24, %f23;\n"
	"\n"
	"BB2_3:\n"
	"	setp.geu.f32	%p3, %f24, 0f00000000;\n"
	"	@%p3 bra 	BB2_5;\n"
	"\n"
	"	max.f32 	%f24, %f1, %f2;\n"
	"\n"
	"BB2_5:\n"
	"	st.param.f32	[func_retval0+0], %f24;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z13distanceTorus7shape_k6float3(\n"
	"	.param .align 16 .b8 _Z13distanceTorus7shape_k6float3_param_0[80],\n"
	"	.param .align 4 .b8 _Z13distanceTorus7shape_k6float3_param_1[12]\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<25>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z13distanceTorus7shape_k6float3_param_0+20];\n"
	"	ld.param.f32 	%f2, [_Z13distanceTorus7shape_k6float3_param_0+8];\n"
	"	ld.param.f32 	%f3, [_Z13distanceTorus7shape_k6float3_param_0+16];\n"
	"	ld.param.f32 	%f4, [_Z13distanceTorus7shape_k6float3_param_0+12];\n"
	"	ld.param.f32 	%f5, [_Z13distanceTorus7shape_k6float3_param_0+4];\n"
	"	ld.param.f32 	%f6, [_Z13distanceTorus7shape_k6float3_param_1+4];\n"
	"	ld.param.f32 	%f7, [_Z13distanceTorus7shape_k6float3_param_1+8];\n"
	"	ld.param.f32 	%f8, [_Z13distanceTorus7shape_k6float3_param_1];\n"
	"	sub.f32 	%f9, %f8, %f5;\n"
	"	sub.f32 	%f10, %f7, %f4;\n"
	"	mul.f32 	%f11, %f9, %f9;\n"
	"	fma.rn.f32 	%f12, %f10, %f10, %f11;\n"
	"	sqrt.rn.f32 	%f13, %f12;\n"
	"	div.rn.f32 	%f14, %f3, %f13;\n"
	"	fma.rn.f32 	%f15, %f9, %f14, %f5;\n"
	"	fma.rn.f32 	%f16, %f10, %f14, %f4;\n"
	"	sub.f32 	%f17, %f8, %f15;\n"
	"	mul.f32 	%f18, %f17, %f17;\n"
	"	sub.f32 	%f19, %f6, %f2;\n"
	"	fma.rn.f32 	%f20, %f19, %f19, %f18;\n"
	"	sub.f32 	%f21, %f7, %f16;\n"
	"	fma.rn.f32 	%f22, %f21, %f21, %f20;\n"
	"	sqrt.rn.f32 	%f23, %f22;\n"
	"	sub.f32 	%f24, %f23, %f1;\n"
	"	st.param.f32	[func_retval0+0], %f24;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z15MDFintersection10operator_kffmm(\n"
	"	.param .align 4 .b8 _Z15MDFintersection10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z15MDFintersection10operator_kffmm_param_1,\n"
	"	.param .b32 _Z15MDFintersection10operator_kffmm_param_2,\n"
	"	.param .b64 _Z15MDFintersection10operator_kffmm_param_3,\n"
	"	.param .b64 _Z15MDFintersection10operator_kffmm_param_4\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<4>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z15MDFintersection10operator_kffmm_param_1];\n"
	"	ld.param.f32 	%f2, [_Z15MDFintersection10operator_kffmm_param_2];\n"
	"	max.f32 	%f3, %f1, %f2;\n"
	"	st.param.f32	[func_retval0+0], %f3;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z8MDFunion10operator_kffmm(\n"
	"	.param .align 4 .b8 _Z8MDFunion10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z8MDFunion10operator_kffmm_param_1,\n"
	"	.param .b32 _Z8MDFunion10operator_kffmm_param_2,\n"
	"	.param .b64 _Z8MDFunion10operator_kffmm_param_3,\n"
	"	.param .b64 _Z8MDFunion10operator_kffmm_param_4\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<4>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z8MDFunion10operator_kffmm_param_1];\n"
	"	ld.param.f32 	%f2, [_Z8MDFunion10operator_kffmm_param_2];\n"
	"	min.f32 	%f3, %f1, %f2;\n"
	"	st.param.f32	[func_retval0+0], %f3;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z14MDFsmoothunion10operator_kffmm(\n"
	"	.param .align 4 .b8 _Z14MDFsmoothunion10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z14MDFsmoothunion10operator_kffmm_param_1,\n"
	"	.param .b32 _Z14MDFsmoothunion10operator_kffmm_param_2,\n"
	"	.param .b64 _Z14MDFsmoothunion10operator_kffmm_param_3,\n"
	"	.param .b64 _Z14MDFsmoothunion10operator_kffmm_param_4\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<14>;\n"
	"	.reg .f64 	%fd<13>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z14MDFsmoothunion10operator_kffmm_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Z14MDFsmoothunion10operator_kffmm_param_1];\n"
	"	ld.param.f32 	%f3, [_Z14MDFsmoothunion10operator_kffmm_param_2];\n"
	"	sub.f32 	%f4, %f3, %f2;\n"
	"	cvt.f64.f32	%fd1, %f4;\n"
	"	mul.f64 	%fd2, %fd1, 0d3FE0000000000000;\n"
	"	cvt.f64.f32	%fd3, %f1;\n"
	"	div.rn.f64 	%fd4, %fd2, %fd3;\n"
	"	add.f64 	%fd5, %fd4, 0d3FE0000000000000;\n"
	"	cvt.rn.f32.f64	%f5, %fd5;\n"
	"	mov.f32 	%f6, 0f3F800000;\n"
	"	min.f32 	%f7, %f5, %f6;\n"
	"	mov.f32 	%f8, 0f00000000;\n"
	"	max.f32 	%f9, %f7, %f8;\n"
	"	sub.f32 	%f10, %f2, %f3;\n"
	"	fma.rn.f32 	%f11, %f10, %f9, %f3;\n"
	"	cvt.f64.f32	%fd6, %f11;\n"
	"	mul.f32 	%f12, %f1, %f9;\n"
	"	cvt.f64.f32	%fd7, %f12;\n"
	"	cvt.f64.f32	%fd8, %f9;\n"
	"	mov.f64 	%fd9, 0d3FF0000000000000;\n"
	"	sub.f64 	%fd10, %fd9, %fd8;\n"
	"	mul.f64 	%fd11, %fd7, %fd10;\n"
	"	sub.f64 	%fd12, %fd6, %fd11;\n"
	"	cvt.rn.f32.f64	%f13, %fd12;\n"
	"	st.param.f32	[func_retval0+0], %f13;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z12MDFsmoothsub10operator_kffmm(\n"
	"	.param .align 4 .b8 _Z12MDFsmoothsub10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z12MDFsmoothsub10operator_kffmm_param_1,\n"
	"	.param .b32 _Z12MDFsmoothsub10operator_kffmm_param_2,\n"
	"	.param .b64 _Z12MDFsmoothsub10operator_kffmm_param_3,\n"
	"	.param .b64 _Z12MDFsmoothsub10operator_kffmm_param_4\n"
	")\n"
	"{\n"
	"	.reg .f32 	%f<15>;\n"
	"	.reg .f64 	%fd<13>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z12MDFsmoothsub10operator_kffmm_param_0+8];\n"
	"	ld.param.f32 	%f2, [_Z12MDFsmoothsub10operator_kffmm_param_1];\n"
	"	ld.param.f32 	%f3, [_Z12MDFsmoothsub10operator_kffmm_param_2];\n"
	"	add.f32 	%f4, %f2, %f3;\n"
	"	cvt.f64.f32	%fd1, %f4;\n"
	"	mul.f64 	%fd2, %fd1, 0d3FE0000000000000;\n"
	"	cvt.f64.f32	%fd3, %f1;\n"
	"	div.rn.f64 	%fd4, %fd2, %fd3;\n"
	"	mov.f64 	%fd5, 0d3FE0000000000000;\n"
	"	sub.f64 	%fd6, %fd5, %fd4;\n"
	"	cvt.rn.f32.f64	%f5, %fd6;\n"
	"	mov.f32 	%f6, 0f3F800000;\n"
	"	min.f32 	%f7, %f5, %f6;\n"
	"	mov.f32 	%f8, 0f00000000;\n"
	"	max.f32 	%f9, %f7, %f8;\n"
	"	neg.f32 	%f10, %f2;\n"
	"	sub.f32 	%f11, %f10, %f3;\n"
	"	fma.rn.f32 	%f12, %f11, %f9, %f3;\n"
	"	cvt.f64.f32	%fd7, %f12;\n"
	"	mul.f32 	%f13, %f1, %f9;\n"
	"	cvt.f64.f32	%fd8, %f13;\n"
	"	cvt.f64.f32	%fd9, %f9;\n"
	"	mov.f64 	%fd10, 0d3FF0000000000000;\n"
	"	sub.f64 	%fd11, %fd10, %fd9;\n"
	"	fma.rn.f64 	%fd12, %fd8, %fd11, %fd7;\n"
	"	cvt.rn.f32.f64	%f14, %fd12;\n"
	"	st.param.f32	[func_retval0+0], %f14;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z8MDFmixer10operator_kffmm(\n"
	"	.param .align 4 .b8 _Z8MDFmixer10operator_kffmm_param_0[24],\n"
	"	.param .b32 _Z8MDFmixer10operator_kffmm_param_1,\n"
	"	.param .b32 _Z8MDFmixer10operator_kffmm_param_2,\n"
	"	.param .b64 _Z8MDFmixer10operator_kffmm_param_3,\n"
	"	.param .b64 _Z8MDFmixer10operator_kffmm_param_4\n"
	")\n"
	"{\n"
	"	.reg .pred 	%p<2>;\n"
	"	.reg .f32 	%f<17>;\n"
	"	.reg .b64 	%rd<4>;\n"
	"\n"
	"\n"
	"	ld.param.f32 	%f1, [_Z8MDFmixer10operator_kffmm_param_0+8];\n"
	"	ld.param.f32 	%f16, [_Z8MDFmixer10operator_kffmm_param_1];\n"
	"	ld.param.f32 	%f7, [_Z8MDFmixer10operator_kffmm_param_2];\n"
	"	ld.param.u64 	%rd1, [_Z8MDFmixer10operator_kffmm_param_3];\n"
	"	ld.param.u64 	%rd2, [_Z8MDFmixer10operator_kffmm_param_4];\n"
	"	add.s64 	%rd3, %rd2, -1;\n"
	"	cvt.rn.f32.u64	%f8, %rd3;\n"
	"	cvt.rn.f32.u64	%f9, %rd1;\n"
	"	div.rn.f32 	%f2, %f9, %f8;\n"
	"	add.f32 	%f10, %f9, 0fBF800000;\n"
	"	div.rn.f32 	%f3, %f10, %f8;\n"
	"	setp.lt.f32	%p1, %f1, %f3;\n"
	"	@%p1 bra 	BB8_2;\n"
	"\n"
	"	sub.f32 	%f11, %f7, %f16;\n"
	"	sub.f32 	%f12, %f1, %f3;\n"
	"	mul.f32 	%f13, %f11, %f12;\n"
	"	sub.f32 	%f14, %f2, %f3;\n"
	"	div.rn.f32 	%f15, %f13, %f14;\n"
	"	add.f32 	%f16, %f15, %f16;\n"
	"\n"
	"BB8_2:\n"
	"	st.param.f32	[func_retval0+0], %f16;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .align 4 .b8 func_retval0[12]) _Z8AIFtwist11alterator_k6float3(\n"
	"	.param .align 4 .b8 _Z8AIFtwist11alterator_k6float3_param_0[20],\n"
	"	.param .align 4 .b8 _Z8AIFtwist11alterator_k6float3_param_1[12]\n"
	")\n"
	"{\n"
	"	.local .align 4 .b8 	__local_depot9[28];\n"
	"	.reg .b64 	%SP;\n"
	"	.reg .b64 	%SPL;\n"
	"	.reg .pred 	%p<27>;\n"
	"	.reg .f32 	%f<105>;\n"
	"	.reg .b32 	%r<182>;\n"
	"	.reg .b64 	%rd<26>;\n"
	"\n"
	"\n"
	"	mov.u64 	%SPL, __local_depot9;\n"
	"	cvta.local.u64 	%SP, %SPL;\n"
	"	ld.param.f32 	%f41, [_Z8AIFtwist11alterator_k6float3_param_0+4];\n"
	"	ld.param.f32 	%f40, [_Z8AIFtwist11alterator_k6float3_param_1+8];\n"
	"	ld.param.f32 	%f38, [_Z8AIFtwist11alterator_k6float3_param_1];\n"
	"	ld.param.f32 	%f1, [_Z8AIFtwist11alterator_k6float3_param_1+4];\n"
	"	mul.f32 	%f99, %f41, %f1;\n"
	"	add.u64 	%rd14, %SP, 0;\n"
	"	add.u64 	%rd1, %SPL, 0;\n"
	"	abs.f32 	%f3, %f99;\n"
	"	setp.neu.f32	%p1, %f3, 0f7F800000;\n"
	"	mov.f32 	%f93, %f99;\n"
	"	@%p1 bra 	BB9_2;\n"
	"\n"
	"	mov.f32 	%f42, 0f00000000;\n"
	"	mul.rn.f32 	%f93, %f99, %f42;\n"
	"\n"
	"BB9_2:\n"
	"	mul.f32 	%f43, %f93, 0f3F22F983;\n"
	"	cvt.rni.s32.f32	%r171, %f43;\n"
	"	cvt.rn.f32.s32	%f44, %r171;\n"
	"	neg.f32 	%f45, %f44;\n"
	"	mov.f32 	%f46, 0f3FC90FDA;\n"
	"	fma.rn.f32 	%f47, %f45, %f46, %f93;\n"
	"	mov.f32 	%f48, 0f33A22168;\n"
	"	fma.rn.f32 	%f49, %f45, %f48, %f47;\n"
	"	mov.f32 	%f50, 0f27C234C5;\n"
	"	fma.rn.f32 	%f94, %f45, %f50, %f49;\n"
	"	abs.f32 	%f51, %f93;\n"
	"	setp.leu.f32	%p2, %f51, 0f47CE4780;\n"
	"	@%p2 bra 	BB9_13;\n"
	"\n"
	"	mov.b32 	 %r2, %f93;\n"
	"	shl.b32 	%r72, %r2, 8;\n"
	"	or.b32  	%r3, %r72, -2147483648;\n"
	"	add.s64 	%rd2, %rd1, 24;\n"
	"	mov.u32 	%r163, 0;\n"
	"	mov.u64 	%rd22, __cudart_i2opi_f;\n"
	"	mov.u32 	%r162, -6;\n"
	"	mov.u64 	%rd23, %rd1;\n"
	"\n"
	"BB9_4:\n"
	"	.pragma \"nounroll\";\n"
	"	ld.const.u32 	%r75, [%rd22];\n"
	"	// inline asm\n"
	"	{\n"
	"	mad.lo.cc.u32   %r73, %r75, %r3, %r163;\n"
	"	madc.hi.u32     %r163, %r75, %r3,  0;\n"
	"	}\n"
	"	// inline asm\n"
	"	st.local.u32 	[%rd23], %r73;\n"
	"	add.s64 	%rd23, %rd23, 4;\n"
	"	add.s64 	%rd22, %rd22, 4;\n"
	"	add.s32 	%r162, %r162, 1;\n"
	"	setp.ne.s32	%p3, %r162, 0;\n"
	"	@%p3 bra 	BB9_4;\n"
	"\n"
	"	bfe.u32 	%r78, %r2, 23, 8;\n"
	"	add.s32 	%r79, %r78, -128;\n"
	"	shr.u32 	%r80, %r79, 5;\n"
	"	and.b32  	%r8, %r2, -2147483648;\n"
	"	st.local.u32 	[%rd2], %r163;\n"
	"	bfe.u32 	%r9, %r2, 23, 5;\n"
	"	mov.u32 	%r81, 6;\n"
	"	sub.s32 	%r82, %r81, %r80;\n"
	"	mul.wide.s32 	%rd16, %r82, 4;\n"
	"	add.s64 	%rd7, %rd1, %rd16;\n"
	"	ld.local.u32 	%r164, [%rd7];\n"
	"	ld.local.u32 	%r165, [%rd7+-4];\n"
	"	setp.eq.s32	%p4, %r9, 0;\n"
	"	@%p4 bra 	BB9_7;\n"
	"\n"
	"	mov.u32 	%r83, 32;\n"
	"	sub.s32 	%r84, %r83, %r9;\n"
	"	shr.u32 	%r85, %r165, %r84;\n"
	"	shl.b32 	%r86, %r164, %r9;\n"
	"	add.s32 	%r164, %r85, %r86;\n"
	"	ld.local.u32 	%r87, [%rd7+-8];\n"
	"	shr.u32 	%r88, %r87, %r84;\n"
	"	shl.b32 	%r89, %r165, %r9;\n"
	"	add.s32 	%r165, %r88, %r89;\n"
	"\n"
	"BB9_7:\n"
	"	shr.u32 	%r90, %r165, 30;\n"
	"	shl.b32 	%r91, %r164, 2;\n"
	"	add.s32 	%r166, %r90, %r91;\n"
	"	shl.b32 	%r17, %r165, 2;\n"
	"	shr.u32 	%r92, %r166, 31;\n"
	"	shr.u32 	%r93, %r164, 30;\n"
	"	add.s32 	%r18, %r92, %r93;\n"
	"	setp.eq.s32	%p5, %r92, 0;\n"
	"	@%p5 bra 	BB9_8;\n"
	"\n"
	"	not.b32 	%r94, %r166;\n"
	"	neg.s32 	%r168, %r17;\n"
	"	setp.eq.s32	%p6, %r17, 0;\n"
	"	selp.u32	%r95, 1, 0, %p6;\n"
	"	add.s32 	%r166, %r95, %r94;\n"
	"	xor.b32  	%r167, %r8, -2147483648;\n"
	"	bra.uni 	BB9_10;\n"
	"\n"
	"BB9_8:\n"
	"	mov.u32 	%r167, %r8;\n"
	"	mov.u32 	%r168, %r17;\n"
	"\n"
	"BB9_10:\n"
	"	clz.b32 	%r170, %r166;\n"
	"	setp.eq.s32	%p7, %r170, 0;\n"
	"	shl.b32 	%r96, %r166, %r170;\n"
	"	mov.u32 	%r97, 32;\n"
	"	sub.s32 	%r98, %r97, %r170;\n"
	"	shr.u32 	%r99, %r168, %r98;\n"
	"	add.s32 	%r100, %r99, %r96;\n"
	"	selp.b32	%r26, %r166, %r100, %p7;\n"
	"	mov.u32 	%r101, -921707870;\n"
	"	mul.hi.u32 	%r169, %r26, %r101;\n"
	"	setp.eq.s32	%p8, %r8, 0;\n"
	"	neg.s32 	%r102, %r18;\n"
	"	selp.b32	%r171, %r18, %r102, %p8;\n"
	"	setp.lt.s32	%p9, %r169, 1;\n"
	"	@%p9 bra 	BB9_12;\n"
	"\n"
	"	mul.lo.s32 	%r103, %r26, -921707870;\n"
	"	shr.u32 	%r104, %r103, 31;\n"
	"	shl.b32 	%r105, %r169, 1;\n"
	"	add.s32 	%r169, %r104, %r105;\n"
	"	add.s32 	%r170, %r170, 1;\n"
	"\n"
	"BB9_12:\n"
	"	mov.u32 	%r106, 126;\n"
	"	sub.s32 	%r107, %r106, %r170;\n"
	"	shl.b32 	%r108, %r107, 23;\n"
	"	add.s32 	%r109, %r169, 1;\n"
	"	shr.u32 	%r110, %r109, 7;\n"
	"	add.s32 	%r111, %r110, 1;\n"
	"	shr.u32 	%r112, %r111, 1;\n"
	"	add.s32 	%r113, %r112, %r108;\n"
	"	or.b32  	%r114, %r113, %r167;\n"
	"	mov.b32 	 %f94, %r114;\n"
	"\n"
	"BB9_13:\n"
	"	mul.rn.f32 	%f9, %f94, %f94;\n"
	"	add.s32 	%r34, %r171, 1;\n"
	"	and.b32  	%r35, %r34, 1;\n"
	"	setp.eq.s32	%p10, %r35, 0;\n"
	"	@%p10 bra 	BB9_15;\n"
	"\n"
	"	mov.f32 	%f52, 0fBAB6061A;\n"
	"	mov.f32 	%f53, 0f37CCF5CE;\n"
	"	fma.rn.f32 	%f95, %f53, %f9, %f52;\n"
	"	bra.uni 	BB9_16;\n"
	"\n"
	"BB9_15:\n"
	"	mov.f32 	%f54, 0f3C08839E;\n"
	"	mov.f32 	%f55, 0fB94CA1F9;\n"
	"	fma.rn.f32 	%f95, %f55, %f9, %f54;\n"
	"\n"
	"BB9_16:\n"
	"	@%p10 bra 	BB9_18;\n"
	"\n"
	"	mov.f32 	%f56, 0f3D2AAAA5;\n"
	"	fma.rn.f32 	%f57, %f95, %f9, %f56;\n"
	"	mov.f32 	%f58, 0fBF000000;\n"
	"	fma.rn.f32 	%f96, %f57, %f9, %f58;\n"
	"	bra.uni 	BB9_19;\n"
	"\n"
	"BB9_18:\n"
	"	mov.f32 	%f59, 0fBE2AAAA3;\n"
	"	fma.rn.f32 	%f60, %f95, %f9, %f59;\n"
	"	mov.f32 	%f61, 0f00000000;\n"
	"	fma.rn.f32 	%f96, %f60, %f9, %f61;\n"
	"\n"
	"BB9_19:\n"
	"	fma.rn.f32 	%f97, %f96, %f94, %f94;\n"
	"	@%p10 bra 	BB9_21;\n"
	"\n"
	"	mov.f32 	%f62, 0f3F800000;\n"
	"	fma.rn.f32 	%f97, %f96, %f9, %f62;\n"
	"\n"
	"BB9_21:\n"
	"	and.b32  	%r115, %r34, 2;\n"
	"	setp.eq.s32	%p13, %r115, 0;\n"
	"	@%p13 bra 	BB9_23;\n"
	"\n"
	"	mov.f32 	%f63, 0f00000000;\n"
	"	mov.f32 	%f64, 0fBF800000;\n"
	"	fma.rn.f32 	%f97, %f97, %f64, %f63;\n"
	"\n"
	"BB9_23:\n"
	"	@%p1 bra 	BB9_25;\n"
	"\n"
	"	mov.f32 	%f65, 0f00000000;\n"
	"	mul.rn.f32 	%f99, %f99, %f65;\n"
	"\n"
	"BB9_25:\n"
	"	mul.f32 	%f66, %f99, 0f3F22F983;\n"
	"	cvt.rni.s32.f32	%r181, %f66;\n"
	"	cvt.rn.f32.s32	%f67, %r181;\n"
	"	neg.f32 	%f68, %f67;\n"
	"	fma.rn.f32 	%f70, %f68, %f46, %f99;\n"
	"	fma.rn.f32 	%f72, %f68, %f48, %f70;\n"
	"	fma.rn.f32 	%f100, %f68, %f50, %f72;\n"
	"	abs.f32 	%f74, %f99;\n"
	"	setp.leu.f32	%p15, %f74, 0f47CE4780;\n"
	"	@%p15 bra 	BB9_36;\n"
	"\n"
	"	mov.b32 	 %r37, %f99;\n"
	"	shl.b32 	%r118, %r37, 8;\n"
	"	or.b32  	%r38, %r118, -2147483648;\n"
	"	cvta.to.local.u64 	%rd25, %rd14;\n"
	"	mov.u32 	%r173, 0;\n"
	"	mov.u64 	%rd24, __cudart_i2opi_f;\n"
	"	mov.u32 	%r172, -6;\n"
	"\n"
	"BB9_27:\n"
	"	.pragma \"nounroll\";\n"
	"	ld.const.u32 	%r121, [%rd24];\n"
	"	// inline asm\n"
	"	{\n"
	"	mad.lo.cc.u32   %r119, %r121, %r38, %r173;\n"
	"	madc.hi.u32     %r173, %r121, %r38,  0;\n"
	"	}\n"
	"	// inline asm\n"
	"	st.local.u32 	[%rd25], %r119;\n"
	"	add.s64 	%rd25, %rd25, 4;\n"
	"	add.s64 	%rd24, %rd24, 4;\n"
	"	add.s32 	%r172, %r172, 1;\n"
	"	setp.ne.s32	%p16, %r172, 0;\n"
	"	@%p16 bra 	BB9_27;\n"
	"\n"
	"	bfe.u32 	%r124, %r37, 23, 8;\n"
	"	add.s32 	%r125, %r124, -128;\n"
	"	shr.u32 	%r126, %r125, 5;\n"
	"	and.b32  	%r43, %r37, -2147483648;\n"
	"	cvta.to.local.u64 	%rd20, %rd14;\n"
	"	st.local.u32 	[%rd20+24], %r173;\n"
	"	bfe.u32 	%r44, %r37, 23, 5;\n"
	"	mov.u32 	%r127, 6;\n"
	"	sub.s32 	%r128, %r127, %r126;\n"
	"	mul.wide.s32 	%rd21, %r128, 4;\n"
	"	add.s64 	%rd13, %rd20, %rd21;\n"
	"	ld.local.u32 	%r174, [%rd13];\n"
	"	ld.local.u32 	%r175, [%rd13+-4];\n"
	"	setp.eq.s32	%p17, %r44, 0;\n"
	"	@%p17 bra 	BB9_30;\n"
	"\n"
	"	mov.u32 	%r129, 32;\n"
	"	sub.s32 	%r130, %r129, %r44;\n"
	"	shr.u32 	%r131, %r175, %r130;\n"
	"	shl.b32 	%r132, %r174, %r44;\n"
	"	add.s32 	%r174, %r131, %r132;\n"
	"	ld.local.u32 	%r133, [%rd13+-8];\n"
	"	shr.u32 	%r134, %r133, %r130;\n"
	"	shl.b32 	%r135, %r175, %r44;\n"
	"	add.s32 	%r175, %r134, %r135;\n"
	"\n"
	"BB9_30:\n"
	"	shr.u32 	%r136, %r175, 30;\n"
	"	shl.b32 	%r137, %r174, 2;\n"
	"	add.s32 	%r176, %r136, %r137;\n"
	"	shl.b32 	%r52, %r175, 2;\n"
	"	shr.u32 	%r138, %r176, 31;\n"
	"	shr.u32 	%r139, %r174, 30;\n"
	"	add.s32 	%r53, %r138, %r139;\n"
	"	setp.eq.s32	%p18, %r138, 0;\n"
	"	@%p18 bra 	BB9_31;\n"
	"\n"
	"	not.b32 	%r140, %r176;\n"
	"	neg.s32 	%r178, %r52;\n"
	"	setp.eq.s32	%p19, %r52, 0;\n"
	"	selp.u32	%r141, 1, 0, %p19;\n"
	"	add.s32 	%r176, %r141, %r140;\n"
	"	xor.b32  	%r177, %r43, -2147483648;\n"
	"	bra.uni 	BB9_33;\n"
	"\n"
	"BB9_31:\n"
	"	mov.u32 	%r177, %r43;\n"
	"	mov.u32 	%r178, %r52;\n"
	"\n"
	"BB9_33:\n"
	"	clz.b32 	%r180, %r176;\n"
	"	setp.eq.s32	%p20, %r180, 0;\n"
	"	shl.b32 	%r142, %r176, %r180;\n"
	"	mov.u32 	%r143, 32;\n"
	"	sub.s32 	%r144, %r143, %r180;\n"
	"	shr.u32 	%r145, %r178, %r144;\n"
	"	add.s32 	%r146, %r145, %r142;\n"
	"	selp.b32	%r61, %r176, %r146, %p20;\n"
	"	mov.u32 	%r147, -921707870;\n"
	"	mul.hi.u32 	%r179, %r61, %r147;\n"
	"	setp.eq.s32	%p21, %r43, 0;\n"
	"	neg.s32 	%r148, %r53;\n"
	"	selp.b32	%r181, %r53, %r148, %p21;\n"
	"	setp.lt.s32	%p22, %r179, 1;\n"
	"	@%p22 bra 	BB9_35;\n"
	"\n"
	"	mul.lo.s32 	%r149, %r61, -921707870;\n"
	"	shr.u32 	%r150, %r149, 31;\n"
	"	shl.b32 	%r151, %r179, 1;\n"
	"	add.s32 	%r179, %r150, %r151;\n"
	"	add.s32 	%r180, %r180, 1;\n"
	"\n"
	"BB9_35:\n"
	"	mov.u32 	%r152, 126;\n"
	"	sub.s32 	%r153, %r152, %r180;\n"
	"	shl.b32 	%r154, %r153, 23;\n"
	"	add.s32 	%r155, %r179, 1;\n"
	"	shr.u32 	%r156, %r155, 7;\n"
	"	add.s32 	%r157, %r156, 1;\n"
	"	shr.u32 	%r158, %r157, 1;\n"
	"	add.s32 	%r159, %r158, %r154;\n"
	"	or.b32  	%r160, %r159, %r177;\n"
	"	mov.b32 	 %f100, %r160;\n"
	"\n"
	"BB9_36:\n"
	"	mul.rn.f32 	%f26, %f100, %f100;\n"
	"	and.b32  	%r69, %r181, 1;\n"
	"	setp.eq.s32	%p23, %r69, 0;\n"
	"	@%p23 bra 	BB9_38;\n"
	"\n"
	"	mov.f32 	%f75, 0fBAB6061A;\n"
	"	mov.f32 	%f76, 0f37CCF5CE;\n"
	"	fma.rn.f32 	%f101, %f76, %f26, %f75;\n"
	"	bra.uni 	BB9_39;\n"
	"\n"
	"BB9_38:\n"
	"	mov.f32 	%f77, 0f3C08839E;\n"
	"	mov.f32 	%f78, 0fB94CA1F9;\n"
	"	fma.rn.f32 	%f101, %f78, %f26, %f77;\n"
	"\n"
	"BB9_39:\n"
	"	@%p23 bra 	BB9_41;\n"
	"\n"
	"	mov.f32 	%f79, 0f3D2AAAA5;\n"
	"	fma.rn.f32 	%f80, %f101, %f26, %f79;\n"
	"	mov.f32 	%f81, 0fBF000000;\n"
	"	fma.rn.f32 	%f102, %f80, %f26, %f81;\n"
	"	bra.uni 	BB9_42;\n"
	"\n"
	"BB9_41:\n"
	"	mov.f32 	%f82, 0fBE2AAAA3;\n"
	"	fma.rn.f32 	%f83, %f101, %f26, %f82;\n"
	"	mov.f32 	%f84, 0f00000000;\n"
	"	fma.rn.f32 	%f102, %f83, %f26, %f84;\n"
	"\n"
	"BB9_42:\n"
	"	fma.rn.f32 	%f103, %f102, %f100, %f100;\n"
	"	@%p23 bra 	BB9_44;\n"
	"\n"
	"	mov.f32 	%f85, 0f3F800000;\n"
	"	fma.rn.f32 	%f103, %f102, %f26, %f85;\n"
	"\n"
	"BB9_44:\n"
	"	and.b32  	%r161, %r181, 2;\n"
	"	setp.eq.s32	%p26, %r161, 0;\n"
	"	@%p26 bra 	BB9_46;\n"
	"\n"
	"	mov.f32 	%f86, 0f00000000;\n"
	"	mov.f32 	%f87, 0fBF800000;\n"
	"	fma.rn.f32 	%f103, %f103, %f87, %f86;\n"
	"\n"
	"BB9_46:\n"
	"	mul.f32 	%f88, %f40, %f103;\n"
	"	mul.f32 	%f89, %f38, %f97;\n"
	"	sub.f32 	%f90, %f89, %f88;\n"
	"	mul.f32 	%f91, %f38, %f103;\n"
	"	fma.rn.f32 	%f92, %f40, %f97, %f91;\n"
	"	st.param.f32	[func_retval0+0], %f90;\n"
	"	st.param.f32	[func_retval0+4], %f1;\n"
	"	st.param.f32	[func_retval0+8], %f92;\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b32 func_retval0) _Z12rootDistanceP7shape_km6float3(\n"
	"	.param .b64 _Z12rootDistanceP7shape_km6float3_param_0,\n"
	"	.param .b64 _Z12rootDistanceP7shape_km6float3_param_1,\n"
	"	.param .align 4 .b8 _Z12rootDistanceP7shape_km6float3_param_2[12]\n"
	")\n"
	"{\n"
	"	.reg .pred 	%p<11>;\n"
	"	.reg .b16 	%rs<41>;\n"
	"	.reg .f32 	%f<90>;\n"
	"	.reg .b32 	%r<31>;\n"
	"	.reg .b64 	%rd<98>;\n"
	"\n"
	"\n"
	"	ld.param.u64 	%rd30, [_Z12rootDistanceP7shape_km6float3_param_0];\n"
	"	ld.param.u64 	%rd31, [_Z12rootDistanceP7shape_km6float3_param_1];\n"
	"	ld.param.f32 	%f28, [_Z12rootDistanceP7shape_km6float3_param_2+8];\n"
	"	ld.param.f32 	%f27, [_Z12rootDistanceP7shape_km6float3_param_2+4];\n"
	"	ld.param.f32 	%f26, [_Z12rootDistanceP7shape_km6float3_param_2];\n"
	"	mul.lo.s64 	%rd32, %rd31, 80;\n"
	"	add.s64 	%rd1, %rd30, %rd32;\n"
	"	ld.v4.u32 	{%r9, %r10, %r11, %r12}, [%rd1];\n"
	"	mov.b32 	 %f1, %r12;\n"
	"	ld.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd1+16];\n"
	"	ld.v2.u64 	{%rd33, %rd34}, [%rd1+48];\n"
	"	ld.u64 	%rd3, [%rd1+64];\n"
	"	setp.eq.s64	%p1, %rd3, 0;\n"
	"	@%p1 bra 	BB10_2;\n"
	"\n"
	"	ld.global.u64 	%rd35, [sdfShapes];\n"
	"	shl.b64 	%rd36, %rd3, 3;\n"
	"	add.s64 	%rd37, %rd36, %rd35;\n"
	"	ld.u64 	%rd38, [%rd37+-8];\n"
	"	// Callseq Start 8\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd31;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	prototype_8 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _, .param .align 4 .b8 _[12]) ;\n"
	"	call (retval0), \n"
	"	%rd38, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	)\n"
	"	, prototype_8;\n"
	"	ld.param.f32	%f89, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 8\n"
	"\n"
	"BB10_19:\n"
	"	st.param.f32	[func_retval0+0], %f89;\n"
	"	ret;\n"
	"\n"
	"BB10_2:\n"
	"	setp.eq.s32	%p2, %r9, 4;\n"
	"	mul.lo.s64 	%rd39, %rd33, 80;\n"
	"	add.s64 	%rd4, %rd30, %rd39;\n"
	"	@%p2 bra 	BB10_6;\n"
	"	bra.uni 	BB10_3;\n"
	"\n"
	"BB10_6:\n"
	"	// Callseq Start 12\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd33;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f11, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 12\n"
	"	cvt.s64.s32	%rd5, %r10;\n"
	"	setp.lt.u32	%p4, %r10, 2;\n"
	"	@%p4 bra 	BB10_7;\n"
	"\n"
	"	mul.wide.s32 	%rd63, %r11, 8;\n"
	"	mov.u64 	%rd64, MDF;\n"
	"	add.s64 	%rd6, %rd64, %rd63;\n"
	"	add.s64 	%rd65, %rd5, -1;\n"
	"	setp.gt.u32	%p5, %r10, 2;\n"
	"	selp.b64	%rd7, %rd65, 1, %p5;\n"
	"	mov.u64 	%rd96, 1;\n"
	"	and.b64  	%rd8, %rd7, 3;\n"
	"	setp.eq.s64	%p6, %rd8, 0;\n"
	"	mov.f32 	%f89, 0f00000000;\n"
	"	@%p6 bra 	BB10_16;\n"
	"\n"
	"	setp.eq.s64	%p7, %rd8, 1;\n"
	"	@%p7 bra 	BB10_14;\n"
	"	bra.uni 	BB10_10;\n"
	"\n"
	"BB10_14:\n"
	"	ld.global.u64 	%rd91, [%rd6];\n"
	"	mov.u64 	%rd92, 1;\n"
	"	bra.uni 	BB10_15;\n"
	"\n"
	"BB10_3:\n"
	"	setp.eq.s32	%p3, %r9, 5;\n"
	"	@%p3 bra 	BB10_5;\n"
	"	bra.uni 	BB10_4;\n"
	"\n"
	"BB10_5:\n"
	"	mul.wide.s32 	%rd49, %r10, 8;\n"
	"	mov.u64 	%rd50, AIF;\n"
	"	add.s64 	%rd51, %rd50, %rd49;\n"
	"	ld.global.u64 	%rd52, [%rd51];\n"
	"	mov.b32 	 %f51, %r11;\n"
	"	// Callseq Start 10\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[20];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.f32	[param0+4], %f51;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f26;\n"
	"	st.param.f32	[param1+4], %f27;\n"
	"	st.param.f32	[param1+8], %f28;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	prototype_10 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .align 4 .b8 _[20], .param .align 4 .b8 _[12]) ;\n"
	"	call (retval0), \n"
	"	%rd52, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	)\n"
	"	, prototype_10;\n"
	"	ld.param.f32	%f52, [retval0+0];\n"
	"	ld.param.f32	%f53, [retval0+4];\n"
	"	ld.param.f32	%f54, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 10\n"
	"	ld.u32 	%r22, [%rd4];\n"
	"	mul.wide.s32 	%rd53, %r22, 8;\n"
	"	mov.u64 	%rd54, SDF;\n"
	"	add.s64 	%rd55, %rd54, %rd53;\n"
	"	ld.global.u64 	%rd56, [%rd55];\n"
	"	ld.v4.u32 	{%r23, %r24, %r25, %r26}, [%rd4];\n"
	"	mov.b32 	 %f55, %r24;\n"
	"	mov.b32 	 %f56, %r25;\n"
	"	mov.b32 	 %f57, %r26;\n"
	"	ld.v4.f32 	{%f58, %f59, %f60, %f61}, [%rd4+16];\n"
	"	ld.v4.u8 	{%rs21, %rs22, %rs23, %rs24}, [%rd4+28];\n"
	"	ld.v4.f32 	{%f65, %f66, %f67, %f68}, [%rd4+32];\n"
	"	ld.v2.u64 	{%rd57, %rd58}, [%rd4+48];\n"
	"	ld.v4.u16 	{%rs25, %rs26, %rs27, %rs28}, [%rd4+72];\n"
	"	ld.u64 	%rd61, [%rd4+64];\n"
	"	shr.u16 	%rs34, %rs25, 8;\n"
	"	shr.u16 	%rs36, %rs26, 8;\n"
	"	shr.u16 	%rs38, %rs27, 8;\n"
	"	shr.u16 	%rs40, %rs28, 8;\n"
	"	// Callseq Start 11\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 16 .b8 param0[80];\n"
	"	st.param.b32	[param0+0], %r23;\n"
	"	st.param.f32	[param0+4], %f55;\n"
	"	st.param.f32	[param0+8], %f56;\n"
	"	st.param.f32	[param0+12], %f57;\n"
	"	st.param.f32	[param0+16], %f58;\n"
	"	st.param.f32	[param0+20], %f59;\n"
	"	st.param.f32	[param0+24], %f60;\n"
	"	st.param.b8	[param0+28], %rs21;\n"
	"	st.param.b8	[param0+29], %rs22;\n"
	"	st.param.b8	[param0+30], %rs23;\n"
	"	st.param.b8	[param0+31], %rs24;\n"
	"	st.param.f32	[param0+32], %f65;\n"
	"	st.param.f32	[param0+36], %f66;\n"
	"	st.param.f32	[param0+40], %f67;\n"
	"	st.param.f32	[param0+44], %f68;\n"
	"	st.param.b64	[param0+48], %rd57;\n"
	"	st.param.b64	[param0+56], %rd58;\n"
	"	st.param.b64	[param0+64], %rd61;\n"
	"	st.param.b8	[param0+72], %rs25;\n"
	"	st.param.b8	[param0+73], %rs34;\n"
	"	st.param.b8	[param0+74], %rs26;\n"
	"	st.param.b8	[param0+75], %rs36;\n"
	"	st.param.b8	[param0+76], %rs27;\n"
	"	st.param.b8	[param0+77], %rs38;\n"
	"	st.param.b8	[param0+78], %rs28;\n"
	"	st.param.b8	[param0+79], %rs40;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f52;\n"
	"	st.param.f32	[param1+4], %f53;\n"
	"	st.param.f32	[param1+8], %f54;\n"
	"	.param .b32 retval0;\n"
	"	prototype_11 : .callprototype (.param .b32 _) _ (.param .align 16 .b8 _[80], .param .align 4 .b8 _[12]) ;\n"
	"	call (retval0), \n"
	"	%rd56, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	)\n"
	"	, prototype_11;\n"
	"	ld.param.f32	%f89, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 11\n"
	"	bra.uni 	BB10_19;\n"
	"\n"
	"BB10_7:\n"
	"	mov.f32 	%f89, %f11;\n"
	"	bra.uni 	BB10_19;\n"
	"\n"
	"BB10_4:\n"
	"	ld.u32 	%r13, [%rd1];\n"
	"	mul.wide.s32 	%rd40, %r13, 8;\n"
	"	mov.u64 	%rd41, SDF;\n"
	"	add.s64 	%rd42, %rd41, %rd40;\n"
	"	ld.global.u64 	%rd43, [%rd42];\n"
	"	ld.v4.u32 	{%r14, %r15, %r16, %r17}, [%rd1];\n"
	"	mov.b32 	 %f33, %r15;\n"
	"	mov.b32 	 %f34, %r16;\n"
	"	mov.b32 	 %f35, %r17;\n"
	"	ld.v4.f32 	{%f36, %f37, %f38, %f39}, [%rd1+16];\n"
	"	ld.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [%rd1+28];\n"
	"	ld.v4.f32 	{%f43, %f44, %f45, %f46}, [%rd1+32];\n"
	"	ld.v2.u64 	{%rd44, %rd45}, [%rd1+48];\n"
	"	ld.v4.u16 	{%rs5, %rs6, %rs7, %rs8}, [%rd1+72];\n"
	"	ld.u64 	%rd48, [%rd1+64];\n"
	"	shr.u16 	%rs14, %rs5, 8;\n"
	"	shr.u16 	%rs16, %rs6, 8;\n"
	"	shr.u16 	%rs18, %rs7, 8;\n"
	"	shr.u16 	%rs20, %rs8, 8;\n"
	"	// Callseq Start 9\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 16 .b8 param0[80];\n"
	"	st.param.b32	[param0+0], %r14;\n"
	"	st.param.f32	[param0+4], %f33;\n"
	"	st.param.f32	[param0+8], %f34;\n"
	"	st.param.f32	[param0+12], %f35;\n"
	"	st.param.f32	[param0+16], %f36;\n"
	"	st.param.f32	[param0+20], %f37;\n"
	"	st.param.f32	[param0+24], %f38;\n"
	"	st.param.b8	[param0+28], %rs1;\n"
	"	st.param.b8	[param0+29], %rs2;\n"
	"	st.param.b8	[param0+30], %rs3;\n"
	"	st.param.b8	[param0+31], %rs4;\n"
	"	st.param.f32	[param0+32], %f43;\n"
	"	st.param.f32	[param0+36], %f44;\n"
	"	st.param.f32	[param0+40], %f45;\n"
	"	st.param.f32	[param0+44], %f46;\n"
	"	st.param.b64	[param0+48], %rd44;\n"
	"	st.param.b64	[param0+56], %rd45;\n"
	"	st.param.b64	[param0+64], %rd48;\n"
	"	st.param.b8	[param0+72], %rs5;\n"
	"	st.param.b8	[param0+73], %rs14;\n"
	"	st.param.b8	[param0+74], %rs6;\n"
	"	st.param.b8	[param0+75], %rs16;\n"
	"	st.param.b8	[param0+76], %rs7;\n"
	"	st.param.b8	[param0+77], %rs18;\n"
	"	st.param.b8	[param0+78], %rs8;\n"
	"	st.param.b8	[param0+79], %rs20;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f26;\n"
	"	st.param.f32	[param1+4], %f27;\n"
	"	st.param.f32	[param1+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	prototype_9 : .callprototype (.param .b32 _) _ (.param .align 16 .b8 _[80], .param .align 4 .b8 _[12]) ;\n"
	"	call (retval0), \n"
	"	%rd43, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	)\n"
	"	, prototype_9;\n"
	"	ld.param.f32	%f89, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 9\n"
	"	bra.uni 	BB10_19;\n"
	"\n"
	"BB10_10:\n"
	"	setp.eq.s64	%p8, %rd8, 2;\n"
	"	@%p8 bra 	BB10_12;\n"
	"	bra.uni 	BB10_11;\n"
	"\n"
	"BB10_12:\n"
	"	ld.global.u64 	%rd91, [%rd6];\n"
	"	mov.u64 	%rd89, 1;\n"
	"	bra.uni 	BB10_13;\n"
	"\n"
	"BB10_11:\n"
	"	ld.u64 	%rd33, [%rd4+56];\n"
	"	ld.global.u64 	%rd91, [%rd6];\n"
	"	// Callseq Start 13\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd33;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f74, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 13\n"
	"	mov.u64 	%rd67, 1;\n"
	"	// Callseq Start 14\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[24];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.b32	[param0+4], %r11;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	st.param.f32	[param0+20], %f31;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f11;\n"
	"	.param .b32 param2;\n"
	"	st.param.f32	[param2+0], %f74;\n"
	"	.param .b64 param3;\n"
	"	st.param.b64	[param3+0], %rd67;\n"
	"	.param .b64 param4;\n"
	"	st.param.b64	[param4+0], %rd5;\n"
	"	.param .b32 retval0;\n"
	"	prototype_14 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[24], .param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _) ;\n"
	"	call (retval0), \n"
	"	%rd91, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2, \n"
	"	param3, \n"
	"	param4\n"
	"	)\n"
	"	, prototype_14;\n"
	"	ld.param.f32	%f11, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 14\n"
	"	mov.u64 	%rd89, 2;\n"
	"\n"
	"BB10_13:\n"
	"	mul.lo.s64 	%rd69, %rd33, 80;\n"
	"	add.s64 	%rd70, %rd30, %rd69;\n"
	"	ld.u64 	%rd33, [%rd70+56];\n"
	"	// Callseq Start 15\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd33;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f75, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 15\n"
	"	// Callseq Start 16\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[24];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.b32	[param0+4], %r11;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	st.param.f32	[param0+20], %f31;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f11;\n"
	"	.param .b32 param2;\n"
	"	st.param.f32	[param2+0], %f75;\n"
	"	.param .b64 param3;\n"
	"	st.param.b64	[param3+0], %rd89;\n"
	"	.param .b64 param4;\n"
	"	st.param.b64	[param4+0], %rd5;\n"
	"	.param .b32 retval0;\n"
	"	prototype_16 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[24], .param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _) ;\n"
	"	call (retval0), \n"
	"	%rd91, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2, \n"
	"	param3, \n"
	"	param4\n"
	"	)\n"
	"	, prototype_16;\n"
	"	ld.param.f32	%f11, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 16\n"
	"	add.s64 	%rd92, %rd89, 1;\n"
	"\n"
	"BB10_15:\n"
	"	mul.lo.s64 	%rd72, %rd33, 80;\n"
	"	add.s64 	%rd73, %rd30, %rd72;\n"
	"	ld.u64 	%rd33, [%rd73+56];\n"
	"	// Callseq Start 17\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd33;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f76, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 17\n"
	"	// Callseq Start 18\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[24];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.b32	[param0+4], %r11;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	st.param.f32	[param0+20], %f31;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f11;\n"
	"	.param .b32 param2;\n"
	"	st.param.f32	[param2+0], %f76;\n"
	"	.param .b64 param3;\n"
	"	st.param.b64	[param3+0], %rd92;\n"
	"	.param .b64 param4;\n"
	"	st.param.b64	[param4+0], %rd5;\n"
	"	.param .b32 retval0;\n"
	"	prototype_18 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[24], .param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _) ;\n"
	"	call (retval0), \n"
	"	%rd91, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2, \n"
	"	param3, \n"
	"	param4\n"
	"	)\n"
	"	, prototype_18;\n"
	"	ld.param.f32	%f11, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 18\n"
	"	add.s64 	%rd96, %rd92, 1;\n"
	"	mov.f32 	%f89, %f11;\n"
	"\n"
	"BB10_16:\n"
	"	setp.lt.u64	%p9, %rd7, 4;\n"
	"	@%p9 bra 	BB10_19;\n"
	"\n"
	"	ld.global.u64 	%rd25, [%rd6];\n"
	"	mov.f32 	%f89, %f11;\n"
	"\n"
	"BB10_18:\n"
	"	mul.lo.s64 	%rd74, %rd33, 80;\n"
	"	add.s64 	%rd75, %rd30, %rd74;\n"
	"	ld.u64 	%rd76, [%rd75+56];\n"
	"	// Callseq Start 19\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd76;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f77, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 19\n"
	"	// Callseq Start 20\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[24];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.b32	[param0+4], %r11;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	st.param.f32	[param0+20], %f31;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f89;\n"
	"	.param .b32 param2;\n"
	"	st.param.f32	[param2+0], %f77;\n"
	"	.param .b64 param3;\n"
	"	st.param.b64	[param3+0], %rd96;\n"
	"	.param .b64 param4;\n"
	"	st.param.b64	[param4+0], %rd5;\n"
	"	.param .b32 retval0;\n"
	"	prototype_20 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[24], .param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _) ;\n"
	"	call (retval0), \n"
	"	%rd25, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2, \n"
	"	param3, \n"
	"	param4\n"
	"	)\n"
	"	, prototype_20;\n"
	"	ld.param.f32	%f78, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 20\n"
	"	mul.lo.s64 	%rd77, %rd76, 80;\n"
	"	add.s64 	%rd78, %rd30, %rd77;\n"
	"	ld.u64 	%rd79, [%rd78+56];\n"
	"	// Callseq Start 21\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd79;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f79, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 21\n"
	"	add.s64 	%rd80, %rd96, 1;\n"
	"	// Callseq Start 22\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[24];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.b32	[param0+4], %r11;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	st.param.f32	[param0+20], %f31;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f78;\n"
	"	.param .b32 param2;\n"
	"	st.param.f32	[param2+0], %f79;\n"
	"	.param .b64 param3;\n"
	"	st.param.b64	[param3+0], %rd80;\n"
	"	.param .b64 param4;\n"
	"	st.param.b64	[param4+0], %rd5;\n"
	"	.param .b32 retval0;\n"
	"	prototype_22 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[24], .param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _) ;\n"
	"	call (retval0), \n"
	"	%rd25, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2, \n"
	"	param3, \n"
	"	param4\n"
	"	)\n"
	"	, prototype_22;\n"
	"	ld.param.f32	%f80, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 22\n"
	"	mul.lo.s64 	%rd81, %rd79, 80;\n"
	"	add.s64 	%rd82, %rd30, %rd81;\n"
	"	ld.u64 	%rd83, [%rd82+56];\n"
	"	// Callseq Start 23\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd83;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f81, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 23\n"
	"	add.s64 	%rd84, %rd96, 2;\n"
	"	// Callseq Start 24\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[24];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.b32	[param0+4], %r11;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	st.param.f32	[param0+20], %f31;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f80;\n"
	"	.param .b32 param2;\n"
	"	st.param.f32	[param2+0], %f81;\n"
	"	.param .b64 param3;\n"
	"	st.param.b64	[param3+0], %rd84;\n"
	"	.param .b64 param4;\n"
	"	st.param.b64	[param4+0], %rd5;\n"
	"	.param .b32 retval0;\n"
	"	prototype_24 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[24], .param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _) ;\n"
	"	call (retval0), \n"
	"	%rd25, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2, \n"
	"	param3, \n"
	"	param4\n"
	"	)\n"
	"	, prototype_24;\n"
	"	ld.param.f32	%f82, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 24\n"
	"	mul.lo.s64 	%rd85, %rd83, 80;\n"
	"	add.s64 	%rd86, %rd30, %rd85;\n"
	"	ld.u64 	%rd33, [%rd86+56];\n"
	"	// Callseq Start 25\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd30;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd33;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f26;\n"
	"	st.param.f32	[param2+4], %f27;\n"
	"	st.param.f32	[param2+8], %f28;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f83, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 25\n"
	"	add.s64 	%rd87, %rd96, 3;\n"
	"	// Callseq Start 26\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[24];\n"
	"	st.param.b32	[param0+0], %r10;\n"
	"	st.param.b32	[param0+4], %r11;\n"
	"	st.param.f32	[param0+8], %f1;\n"
	"	st.param.f32	[param0+12], %f29;\n"
	"	st.param.f32	[param0+16], %f30;\n"
	"	st.param.f32	[param0+20], %f31;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f82;\n"
	"	.param .b32 param2;\n"
	"	st.param.f32	[param2+0], %f83;\n"
	"	.param .b64 param3;\n"
	"	st.param.b64	[param3+0], %rd87;\n"
	"	.param .b64 param4;\n"
	"	st.param.b64	[param4+0], %rd5;\n"
	"	.param .b32 retval0;\n"
	"	prototype_26 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[24], .param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _) ;\n"
	"	call (retval0), \n"
	"	%rd25, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2, \n"
	"	param3, \n"
	"	param4\n"
	"	)\n"
	"	, prototype_26;\n"
	"	ld.param.f32	%f89, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 26\n"
	"	add.s64 	%rd96, %rd96, 4;\n"
	"	setp.lt.u64	%p10, %rd96, %rd5;\n"
	"	@%p10 bra 	BB10_18;\n"
	"	bra.uni 	BB10_19;\n"
	"}\n"
	"\n"
	"	// .globl	firstRay\n"
	".visible .entry firstRay(\n"
	"	.param .u64 firstRay_param_0,\n"
	"	.param .u32 firstRay_param_1,\n"
	"	.param .u32 firstRay_param_2,\n"
	"	.param .u64 firstRay_param_3,\n"
	"	.param .u64 firstRay_param_4,\n"
	"	.param .u64 firstRay_param_5,\n"
	"	.param .u64 firstRay_param_6,\n"
	"	.param .u64 firstRay_param_7,\n"
	"	.param .u64 firstRay_param_8,\n"
	"	.param .align 4 .b8 firstRay_param_9[12],\n"
	"	.param .align 4 .b8 firstRay_param_10[12],\n"
	"	.param .align 4 .b8 firstRay_param_11[12],\n"
	"	.param .align 4 .b8 firstRay_param_12[12]\n"
	")\n"
	"{\n"
	"	.reg .pred 	%p<100>;\n"
	"	.reg .b16 	%rs<12>;\n"
	"	.reg .f32 	%f<447>;\n"
	"	.reg .b32 	%r<155>;\n"
	"	.reg .f64 	%fd<46>;\n"
	"	.reg .b64 	%rd<142>;\n"
	"	// demoted variable\n"
	"	.shared .align 8 .b8 _ZZ8firstRayE6__addr[16];\n"
	"	// demoted variable\n"
	"	.shared .align 4 .u32 _ZZ8firstRayE1n;\n"
	"\n"
	"	ld.param.u32 	%r20, [firstRay_param_1];\n"
	"	ld.param.u32 	%r21, [firstRay_param_2];\n"
	"	ld.param.u64 	%rd58, [firstRay_param_3];\n"
	"	ld.param.u64 	%rd59, [firstRay_param_5];\n"
	"	ld.param.u64 	%rd62, [firstRay_param_8];\n"
	"	ld.param.f32 	%f1, [firstRay_param_9];\n"
	"	ld.param.f32 	%f2, [firstRay_param_9+4];\n"
	"	ld.param.f32 	%f3, [firstRay_param_9+8];\n"
	"	mov.u32 	%r22, %ntid.x;\n"
	"	mov.u32 	%r23, %ctaid.x;\n"
	"	mov.u32 	%r1, %tid.x;\n"
	"	mad.lo.s32 	%r2, %r22, %r23, %r1;\n"
	"	mov.u32 	%r24, %ntid.y;\n"
	"	mov.u32 	%r25, %ctaid.y;\n"
	"	mov.u32 	%r3, %tid.y;\n"
	"	mad.lo.s32 	%r4, %r24, %r25, %r3;\n"
	"	setp.ge.s32	%p4, %r4, %r21;\n"
	"	setp.ge.s32	%p5, %r2, %r20;\n"
	"	or.pred  	%p6, %p4, %p5;\n"
	"	@%p6 bra 	BB11_118;\n"
	"\n"
	"	mov.u32 	%r140, %tid.x;\n"
	"	mov.u32 	%r139, %tid.y;\n"
	"	ld.param.u64 	%rd110, [firstRay_param_6];\n"
	"	ld.param.f32 	%f412, [firstRay_param_11+8];\n"
	"	ld.param.f32 	%f411, [firstRay_param_11+4];\n"
	"	ld.param.f32 	%f410, [firstRay_param_11];\n"
	"	ld.param.f32 	%f409, [firstRay_param_10+8];\n"
	"	ld.param.f32 	%f408, [firstRay_param_10+4];\n"
	"	ld.param.f32 	%f407, [firstRay_param_10];\n"
	"	ld.param.f32 	%f406, [firstRay_param_12+8];\n"
	"	ld.param.f32 	%f405, [firstRay_param_12+4];\n"
	"	ld.param.f32 	%f404, [firstRay_param_12];\n"
	"	cvt.rn.f32.s32	%f4, %r20;\n"
	"	cvt.rn.f32.s32	%f152, %r2;\n"
	"	div.rn.f32 	%f153, %f152, %f4;\n"
	"	fma.rn.f32 	%f154, %f153, 0f40000000, 0fBF800000;\n"
	"	cvt.rn.f32.s32	%f5, %r21;\n"
	"	cvt.rn.f32.s32	%f155, %r4;\n"
	"	div.rn.f32 	%f156, %f155, %f5;\n"
	"	fma.rn.f32 	%f157, %f156, 0f40000000, 0fBF800000;\n"
	"	// Callseq Start 27\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f1;\n"
	"	st.param.f32	[param0+4], %f2;\n"
	"	st.param.f32	[param0+8], %f3;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f404;\n"
	"	st.param.f32	[param1+4], %f405;\n"
	"	st.param.f32	[param1+8], %f406;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f158, [retval0+0];\n"
	"	ld.param.f32	%f159, [retval0+4];\n"
	"	ld.param.f32	%f160, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 27\n"
	"	// Callseq Start 28\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f407;\n"
	"	st.param.f32	[param0+4], %f408;\n"
	"	st.param.f32	[param0+8], %f409;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f154;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zml6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f161, [retval0+0];\n"
	"	ld.param.f32	%f162, [retval0+4];\n"
	"	ld.param.f32	%f163, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 28\n"
	"	// Callseq Start 29\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f158;\n"
	"	st.param.f32	[param0+4], %f159;\n"
	"	st.param.f32	[param0+8], %f160;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f161;\n"
	"	st.param.f32	[param1+4], %f162;\n"
	"	st.param.f32	[param1+8], %f163;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f164, [retval0+0];\n"
	"	ld.param.f32	%f165, [retval0+4];\n"
	"	ld.param.f32	%f166, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 29\n"
	"	// Callseq Start 30\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f410;\n"
	"	st.param.f32	[param0+4], %f411;\n"
	"	st.param.f32	[param0+8], %f412;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f157;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zml6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f167, [retval0+0];\n"
	"	ld.param.f32	%f168, [retval0+4];\n"
	"	ld.param.f32	%f169, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 30\n"
	"	// Callseq Start 31\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f164;\n"
	"	st.param.f32	[param0+4], %f165;\n"
	"	st.param.f32	[param0+8], %f166;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f167;\n"
	"	st.param.f32	[param1+4], %f168;\n"
	"	st.param.f32	[param1+8], %f169;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f36, [retval0+0];\n"
	"	ld.param.f32	%f37, [retval0+4];\n"
	"	ld.param.f32	%f38, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 31\n"
	"	sub.f32 	%f170, %f36, %f1;\n"
	"	sub.f32 	%f171, %f37, %f2;\n"
	"	mul.f32 	%f172, %f171, %f171;\n"
	"	fma.rn.f32 	%f173, %f170, %f170, %f172;\n"
	"	sub.f32 	%f174, %f38, %f3;\n"
	"	fma.rn.f32 	%f175, %f174, %f174, %f173;\n"
	"	sqrt.rn.f32 	%f440, %f175;\n"
	"	// Callseq Start 32\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f36;\n"
	"	st.param.f32	[param0+4], %f37;\n"
	"	st.param.f32	[param0+8], %f38;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f176, [retval0+0];\n"
	"	ld.param.f32	%f177, [retval0+4];\n"
	"	ld.param.f32	%f178, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 32\n"
	"	// Callseq Start 33\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f176;\n"
	"	st.param.f32	[param0+4], %f177;\n"
	"	st.param.f32	[param0+8], %f178;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f440;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zdv6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f13, [retval0+0];\n"
	"	ld.param.f32	%f14, [retval0+4];\n"
	"	ld.param.f32	%f15, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 33\n"
	"	cvta.to.global.u64 	%rd63, %rd110;\n"
	"	ld.global.u32 	%r5, [%rd63];\n"
	"	st.shared.u32 	[_ZZ8firstRayE1n], %r5;\n"
	"	neg.s32 	%r26, %r139;\n"
	"	setp.ne.s32	%p7, %r140, %r26;\n"
	"	@%p7 bra 	BB11_3;\n"
	"\n"
	"	mul.wide.s32 	%rd64, %r5, 8;\n"
	"	// Callseq Start 34\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd64;\n"
	"	.param .b64 retval0;\n"
	"	call.uni (retval0), \n"
	"	malloc, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.b64	%rd65, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 34\n"
	"	mov.u32 	%r27, 0;\n"
	"	st.shared.u32 	[_ZZ8firstRayE1n], %r27;\n"
	"	st.shared.u64 	[_ZZ8firstRayE6__addr+8], %rd65;\n"
	"\n"
	"BB11_3:\n"
	"	bar.sync 	0;\n"
	"	ld.param.u32 	%r146, [firstRay_param_2];\n"
	"	cvt.rn.f32.s32	%f423, %r146;\n"
	"	ld.param.u32 	%r145, [firstRay_param_1];\n"
	"	cvt.rn.f32.s32	%f422, %r145;\n"
	"	mov.u32 	%r144, %ctaid.y;\n"
	"	mov.u32 	%r143, %ctaid.x;\n"
	"	mov.u32 	%r142, %tid.x;\n"
	"	mov.u32 	%r141, %tid.y;\n"
	"	ld.param.f32 	%f421, [firstRay_param_11+8];\n"
	"	ld.param.f32 	%f420, [firstRay_param_11+4];\n"
	"	ld.param.f32 	%f419, [firstRay_param_11];\n"
	"	ld.param.f32 	%f418, [firstRay_param_10+8];\n"
	"	ld.param.f32 	%f417, [firstRay_param_10+4];\n"
	"	ld.param.f32 	%f416, [firstRay_param_10];\n"
	"	ld.param.f32 	%f415, [firstRay_param_12+8];\n"
	"	ld.param.f32 	%f414, [firstRay_param_12+4];\n"
	"	ld.param.f32 	%f413, [firstRay_param_12];\n"
	"	ld.shared.u64 	%rd1, [_ZZ8firstRayE6__addr+8];\n"
	"	cvt.rn.f64.u32	%fd15, %r143;\n"
	"	add.f64 	%fd16, %fd15, 0d3FE0000000000000;\n"
	"	cvt.rn.f64.u32	%fd17, %r22;\n"
	"	mul.f64 	%fd18, %fd16, %fd17;\n"
	"	cvt.rzi.s32.f64	%r30, %fd18;\n"
	"	cvt.rn.f64.u32	%fd19, %r144;\n"
	"	add.f64 	%fd20, %fd19, 0d3FE0000000000000;\n"
	"	cvt.rn.f64.u32	%fd21, %r24;\n"
	"	mul.f64 	%fd22, %fd20, %fd21;\n"
	"	cvt.rzi.s32.f64	%r33, %fd22;\n"
	"	cvt.rn.f32.s32	%f179, %r30;\n"
	"	div.rn.f32 	%f180, %f179, %f422;\n"
	"	fma.rn.f32 	%f181, %f180, 0f40000000, 0fBF800000;\n"
	"	cvt.rn.f32.s32	%f182, %r33;\n"
	"	div.rn.f32 	%f183, %f182, %f423;\n"
	"	fma.rn.f32 	%f184, %f183, 0f40000000, 0fBF800000;\n"
	"	// Callseq Start 35\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f1;\n"
	"	st.param.f32	[param0+4], %f2;\n"
	"	st.param.f32	[param0+8], %f3;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f413;\n"
	"	st.param.f32	[param1+4], %f414;\n"
	"	st.param.f32	[param1+8], %f415;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f185, [retval0+0];\n"
	"	ld.param.f32	%f186, [retval0+4];\n"
	"	ld.param.f32	%f187, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 35\n"
	"	// Callseq Start 36\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f416;\n"
	"	st.param.f32	[param0+4], %f417;\n"
	"	st.param.f32	[param0+8], %f418;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f181;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zml6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f188, [retval0+0];\n"
	"	ld.param.f32	%f189, [retval0+4];\n"
	"	ld.param.f32	%f190, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 36\n"
	"	// Callseq Start 37\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f185;\n"
	"	st.param.f32	[param0+4], %f186;\n"
	"	st.param.f32	[param0+8], %f187;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f188;\n"
	"	st.param.f32	[param1+4], %f189;\n"
	"	st.param.f32	[param1+8], %f190;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f191, [retval0+0];\n"
	"	ld.param.f32	%f192, [retval0+4];\n"
	"	ld.param.f32	%f193, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 37\n"
	"	// Callseq Start 38\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f419;\n"
	"	st.param.f32	[param0+4], %f420;\n"
	"	st.param.f32	[param0+8], %f421;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f184;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zml6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f194, [retval0+0];\n"
	"	ld.param.f32	%f195, [retval0+4];\n"
	"	ld.param.f32	%f196, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 38\n"
	"	// Callseq Start 39\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f191;\n"
	"	st.param.f32	[param0+4], %f192;\n"
	"	st.param.f32	[param0+8], %f193;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f194;\n"
	"	st.param.f32	[param1+4], %f195;\n"
	"	st.param.f32	[param1+8], %f196;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f197, [retval0+0];\n"
	"	ld.param.f32	%f198, [retval0+4];\n"
	"	ld.param.f32	%f199, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 39\n"
	"	// Callseq Start 40\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f197;\n"
	"	st.param.f32	[param0+4], %f198;\n"
	"	st.param.f32	[param0+8], %f199;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f200, [retval0+0];\n"
	"	ld.param.f32	%f201, [retval0+4];\n"
	"	ld.param.f32	%f202, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 40\n"
	"	// Callseq Start 41\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f197;\n"
	"	st.param.f32	[param0+4], %f198;\n"
	"	st.param.f32	[param0+8], %f199;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f203, [retval0+0];\n"
	"	ld.param.f32	%f204, [retval0+4];\n"
	"	ld.param.f32	%f205, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 41\n"
	"	// Callseq Start 42\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f203;\n"
	"	st.param.f32	[param0+4], %f204;\n"
	"	st.param.f32	[param0+8], %f205;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f206, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 42\n"
	"	// Callseq Start 43\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f200;\n"
	"	st.param.f32	[param0+4], %f201;\n"
	"	st.param.f32	[param0+8], %f202;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f206;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zdv6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f16, [retval0+0];\n"
	"	ld.param.f32	%f17, [retval0+4];\n"
	"	ld.param.f32	%f18, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 43\n"
	"	cvt.rn.f32.u32	%f207, %r22;\n"
	"	// Callseq Start 44\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f416;\n"
	"	st.param.f32	[param0+4], %f417;\n"
	"	st.param.f32	[param0+8], %f418;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f208, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 44\n"
	"	mul.f32 	%f209, %f207, %f208;\n"
	"	div.rn.f32 	%f210, %f209, %f422;\n"
	"	cvt.rn.f32.u32	%f211, %r24;\n"
	"	// Callseq Start 45\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f419;\n"
	"	st.param.f32	[param0+4], %f420;\n"
	"	st.param.f32	[param0+8], %f421;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f212, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 45\n"
	"	mul.f32 	%f213, %f211, %f212;\n"
	"	div.rn.f32 	%f214, %f213, %f423;\n"
	"	mul.f32 	%f215, %f214, %f214;\n"
	"	fma.rn.f32 	%f19, %f210, %f210, %f215;\n"
	"	mad.lo.s32 	%r36, %r141, %r22, %r142;\n"
	"	cvt.u64.u32	%rd114, %r36;\n"
	"	ld.global.s32 	%rd67, [%rd63];\n"
	"	setp.ge.u64	%p8, %rd114, %rd67;\n"
	"	@%p8 bra 	BB11_10;\n"
	"\n"
	"	sqrt.rn.f32 	%f216, %f19;\n"
	"	cvt.f64.f32	%fd23, %f216;\n"
	"	mul.f64 	%fd1, %fd23, 0d3FF8000000000000;\n"
	"\n"
	"BB11_5:\n"
	"	// Callseq Start 46\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f16;\n"
	"	st.param.f32	[param0+4], %f17;\n"
	"	st.param.f32	[param0+8], %f18;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f218, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 46\n"
	"	// Callseq Start 47\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f16;\n"
	"	st.param.f32	[param0+4], %f17;\n"
	"	st.param.f32	[param0+8], %f18;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f218;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zdv6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f20, [retval0+0];\n"
	"	ld.param.f32	%f21, [retval0+4];\n"
	"	ld.param.f32	%f22, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 47\n"
	"	cvt.f64.f32	%fd2, %f218;\n"
	"	mov.f32 	%f427, 0f00000000;\n"
	"	mov.f32 	%f424, %f1;\n"
	"	mov.f32 	%f425, %f2;\n"
	"	mov.f32 	%f426, %f3;\n"
	"\n"
	"BB11_6:\n"
	"	cvta.to.global.u64 	%rd68, %rd59;\n"
	"	shl.b64 	%rd69, %rd114, 3;\n"
	"	add.s64 	%rd70, %rd68, %rd69;\n"
	"	ld.global.u64 	%rd71, [%rd70];\n"
	"	// Callseq Start 48\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd71;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f424;\n"
	"	st.param.f32	[param2+4], %f425;\n"
	"	st.param.f32	[param2+8], %f426;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f27, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 48\n"
	"	add.f32 	%f427, %f427, %f27;\n"
	"	// Callseq Start 49\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f427;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f20;\n"
	"	st.param.f32	[param1+4], %f21;\n"
	"	st.param.f32	[param1+8], %f22;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f219, [retval0+0];\n"
	"	ld.param.f32	%f220, [retval0+4];\n"
	"	ld.param.f32	%f221, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 49\n"
	"	// Callseq Start 50\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f219;\n"
	"	st.param.f32	[param0+4], %f220;\n"
	"	st.param.f32	[param0+8], %f221;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f424, [retval0+0];\n"
	"	ld.param.f32	%f425, [retval0+4];\n"
	"	ld.param.f32	%f426, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 50\n"
	"	setp.geu.f32	%p9, %f427, 0f41F00000;\n"
	"	@%p9 bra 	BB11_9;\n"
	"\n"
	"	cvt.f64.f32	%fd24, %f427;\n"
	"	mul.f64 	%fd25, %fd1, %fd24;\n"
	"	div.rn.f64 	%fd26, %fd25, %fd2;\n"
	"	mov.f64 	%fd27, 0d3F50624DD2F1A9FC;\n"
	"	max.f64 	%fd28, %fd26, %fd27;\n"
	"	cvt.f64.f32	%fd29, %f27;\n"
	"	setp.gt.f64	%p10, %fd29, %fd28;\n"
	"	@%p10 bra 	BB11_6;\n"
	"\n"
	"	shl.b64 	%rd113, %rd114, 3;\n"
	"	cvta.to.global.u64 	%rd112, %rd59;\n"
	"	add.s64 	%rd111, %rd112, %rd113;\n"
	"	mov.u32 	%r37, _ZZ8firstRayE1n;\n"
	"	atom.shared.add.u32 	%r38, [%r37], 1;\n"
	"	ld.global.u64 	%rd75, [%rd111];\n"
	"	mul.wide.s32 	%rd76, %r38, 8;\n"
	"	add.s64 	%rd77, %rd1, %rd76;\n"
	"	st.u64 	[%rd77], %rd75;\n"
	"\n"
	"BB11_9:\n"
	"	mul.lo.s32 	%r41, %r24, %r22;\n"
	"	cvt.u64.u32	%rd78, %r41;\n"
	"	add.s64 	%rd114, %rd114, %rd78;\n"
	"	ld.global.s32 	%rd80, [%rd63];\n"
	"	setp.lt.u64	%p11, %rd114, %rd80;\n"
	"	@%p11 bra 	BB11_5;\n"
	"\n"
	"BB11_10:\n"
	"	bar.sync 	0;\n"
	"	mov.u32 	%r6, 0;\n"
	"\n"
	"BB11_11:\n"
	"	.pragma \"nounroll\";\n"
	"	ld.shared.u32 	%r43, [_ZZ8firstRayE1n];\n"
	"	mov.f32 	%f433, 0f41F00000;\n"
	"	setp.lt.s32	%p12, %r43, 1;\n"
	"	@%p12 bra 	BB11_25;\n"
	"\n"
	"	mov.f32 	%f433, 0f41F00000;\n"
	"	mov.u32 	%r7, 0;\n"
	"\n"
	"BB11_13:\n"
	"	.pragma \"nounroll\";\n"
	"	mul.wide.s32 	%rd82, %r7, 8;\n"
	"	add.s64 	%rd7, %rd1, %rd82;\n"
	"	ld.u64 	%rd83, [%rd7];\n"
	"	// Callseq Start 51\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd83;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f36;\n"
	"	st.param.f32	[param2+4], %f37;\n"
	"	st.param.f32	[param2+8], %f38;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f43, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 51\n"
	"	setp.lt.f32	%p13, %f433, %f43;\n"
	"	@%p13 bra 	BB11_15;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd7];\n"
	"\n"
	"BB11_15:\n"
	"	min.f32 	%f433, %f433, %f43;\n"
	"	ld.shared.u32 	%r45, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r46, %r7, 1;\n"
	"	setp.ge.s32	%p14, %r46, %r45;\n"
	"	@%p14 bra 	BB11_25;\n"
	"\n"
	"	ld.u64 	%rd84, [%rd7+8];\n"
	"	// Callseq Start 52\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd84;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f36;\n"
	"	st.param.f32	[param2+4], %f37;\n"
	"	st.param.f32	[param2+8], %f38;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f45, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 52\n"
	"	setp.lt.f32	%p15, %f433, %f45;\n"
	"	@%p15 bra 	BB11_18;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd7+8];\n"
	"\n"
	"BB11_18:\n"
	"	min.f32 	%f433, %f433, %f45;\n"
	"	ld.shared.u32 	%r47, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r48, %r7, 2;\n"
	"	setp.ge.s32	%p16, %r48, %r47;\n"
	"	@%p16 bra 	BB11_25;\n"
	"\n"
	"	ld.u64 	%rd85, [%rd7+16];\n"
	"	// Callseq Start 53\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd85;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f36;\n"
	"	st.param.f32	[param2+4], %f37;\n"
	"	st.param.f32	[param2+8], %f38;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f47, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 53\n"
	"	setp.lt.f32	%p17, %f433, %f47;\n"
	"	@%p17 bra 	BB11_21;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd7+16];\n"
	"\n"
	"BB11_21:\n"
	"	min.f32 	%f433, %f433, %f47;\n"
	"	ld.shared.u32 	%r49, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r50, %r7, 3;\n"
	"	setp.ge.s32	%p18, %r50, %r49;\n"
	"	@%p18 bra 	BB11_25;\n"
	"\n"
	"	ld.u64 	%rd86, [%rd7+24];\n"
	"	// Callseq Start 54\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd86;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f36;\n"
	"	st.param.f32	[param2+4], %f37;\n"
	"	st.param.f32	[param2+8], %f38;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f49, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 54\n"
	"	setp.lt.f32	%p19, %f433, %f49;\n"
	"	@%p19 bra 	BB11_24;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd7+24];\n"
	"\n"
	"BB11_24:\n"
	"	min.f32 	%f433, %f433, %f49;\n"
	"	ld.shared.u32 	%r51, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r7, %r7, 4;\n"
	"	setp.lt.s32	%p20, %r7, %r51;\n"
	"	@%p20 bra 	BB11_13;\n"
	"\n"
	"BB11_25:\n"
	"	cvt.f64.f32	%fd30, %f433;\n"
	"	setp.lt.f64	%p21, %fd30, 0d3F50624DD2F1A9FC;\n"
	"	@%p21 bra 	BB11_80;\n"
	"\n"
	"	add.f32 	%f52, %f440, %f433;\n"
	"	// Callseq Start 55\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f52;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f13;\n"
	"	st.param.f32	[param1+4], %f14;\n"
	"	st.param.f32	[param1+8], %f15;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f225, [retval0+0];\n"
	"	ld.param.f32	%f226, [retval0+4];\n"
	"	ld.param.f32	%f227, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 55\n"
	"	// Callseq Start 56\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f225;\n"
	"	st.param.f32	[param0+4], %f226;\n"
	"	st.param.f32	[param0+8], %f227;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f53, [retval0+0];\n"
	"	ld.param.f32	%f54, [retval0+4];\n"
	"	ld.param.f32	%f55, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 56\n"
	"	setp.gt.f32	%p22, %f52, 0f41F00000;\n"
	"	mov.f32 	%f440, 0f41F00000;\n"
	"	@%p22 bra 	BB11_80;\n"
	"\n"
	"	ld.shared.u32 	%r52, [_ZZ8firstRayE1n];\n"
	"	mov.f32 	%f435, 0f41F00000;\n"
	"	setp.lt.s32	%p23, %r52, 1;\n"
	"	@%p23 bra 	BB11_41;\n"
	"\n"
	"	mov.f32 	%f435, 0f41F00000;\n"
	"	mov.u32 	%r9, 0;\n"
	"\n"
	"BB11_29:\n"
	"	.pragma \"nounroll\";\n"
	"	mul.wide.s32 	%rd87, %r9, 8;\n"
	"	add.s64 	%rd18, %rd1, %rd87;\n"
	"	ld.u64 	%rd88, [%rd18];\n"
	"	// Callseq Start 57\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd88;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f53;\n"
	"	st.param.f32	[param2+4], %f54;\n"
	"	st.param.f32	[param2+8], %f55;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f60, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 57\n"
	"	setp.lt.f32	%p24, %f435, %f60;\n"
	"	@%p24 bra 	BB11_31;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd18];\n"
	"\n"
	"BB11_31:\n"
	"	min.f32 	%f435, %f435, %f60;\n"
	"	ld.shared.u32 	%r54, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r55, %r9, 1;\n"
	"	setp.ge.s32	%p25, %r55, %r54;\n"
	"	@%p25 bra 	BB11_41;\n"
	"\n"
	"	ld.u64 	%rd89, [%rd18+8];\n"
	"	// Callseq Start 58\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd89;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f53;\n"
	"	st.param.f32	[param2+4], %f54;\n"
	"	st.param.f32	[param2+8], %f55;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f62, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 58\n"
	"	setp.lt.f32	%p26, %f435, %f62;\n"
	"	@%p26 bra 	BB11_34;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd18+8];\n"
	"\n"
	"BB11_34:\n"
	"	min.f32 	%f435, %f435, %f62;\n"
	"	ld.shared.u32 	%r56, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r57, %r9, 2;\n"
	"	setp.ge.s32	%p27, %r57, %r56;\n"
	"	@%p27 bra 	BB11_41;\n"
	"\n"
	"	ld.u64 	%rd90, [%rd18+16];\n"
	"	// Callseq Start 59\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd90;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f53;\n"
	"	st.param.f32	[param2+4], %f54;\n"
	"	st.param.f32	[param2+8], %f55;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f64, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 59\n"
	"	setp.lt.f32	%p28, %f435, %f64;\n"
	"	@%p28 bra 	BB11_37;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd18+16];\n"
	"\n"
	"BB11_37:\n"
	"	min.f32 	%f435, %f435, %f64;\n"
	"	ld.shared.u32 	%r58, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r59, %r9, 3;\n"
	"	setp.ge.s32	%p29, %r59, %r58;\n"
	"	@%p29 bra 	BB11_41;\n"
	"\n"
	"	ld.u64 	%rd91, [%rd18+24];\n"
	"	// Callseq Start 60\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd91;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f53;\n"
	"	st.param.f32	[param2+4], %f54;\n"
	"	st.param.f32	[param2+8], %f55;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f66, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 60\n"
	"	setp.lt.f32	%p30, %f435, %f66;\n"
	"	@%p30 bra 	BB11_40;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd18+24];\n"
	"\n"
	"BB11_40:\n"
	"	min.f32 	%f435, %f435, %f66;\n"
	"	ld.shared.u32 	%r60, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r9, %r9, 4;\n"
	"	setp.lt.s32	%p31, %r9, %r60;\n"
	"	@%p31 bra 	BB11_29;\n"
	"\n"
	"BB11_41:\n"
	"	cvt.f64.f32	%fd31, %f435;\n"
	"	setp.lt.f64	%p32, %fd31, 0d3F50624DD2F1A9FC;\n"
	"	@%p32 bra 	BB11_42;\n"
	"\n"
	"	add.f32 	%f69, %f52, %f435;\n"
	"	// Callseq Start 61\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f69;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f13;\n"
	"	st.param.f32	[param1+4], %f14;\n"
	"	st.param.f32	[param1+8], %f15;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f231, [retval0+0];\n"
	"	ld.param.f32	%f232, [retval0+4];\n"
	"	ld.param.f32	%f233, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 61\n"
	"	// Callseq Start 62\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f231;\n"
	"	st.param.f32	[param0+4], %f232;\n"
	"	st.param.f32	[param0+8], %f233;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f70, [retval0+0];\n"
	"	ld.param.f32	%f71, [retval0+4];\n"
	"	ld.param.f32	%f72, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 62\n"
	"	setp.gt.f32	%p33, %f69, 0f41F00000;\n"
	"	mov.f32 	%f440, 0f41F00000;\n"
	"	@%p33 bra 	BB11_80;\n"
	"\n"
	"	ld.shared.u32 	%r61, [_ZZ8firstRayE1n];\n"
	"	mov.f32 	%f437, 0f41F00000;\n"
	"	setp.lt.s32	%p34, %r61, 1;\n"
	"	@%p34 bra 	BB11_58;\n"
	"\n"
	"	mov.f32 	%f437, 0f41F00000;\n"
	"	mov.u32 	%r11, 0;\n"
	"\n"
	"BB11_46:\n"
	"	.pragma \"nounroll\";\n"
	"	mul.wide.s32 	%rd92, %r11, 8;\n"
	"	add.s64 	%rd29, %rd1, %rd92;\n"
	"	ld.u64 	%rd93, [%rd29];\n"
	"	// Callseq Start 63\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd93;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f70;\n"
	"	st.param.f32	[param2+4], %f71;\n"
	"	st.param.f32	[param2+8], %f72;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f77, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 63\n"
	"	setp.lt.f32	%p35, %f437, %f77;\n"
	"	@%p35 bra 	BB11_48;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd29];\n"
	"\n"
	"BB11_48:\n"
	"	min.f32 	%f437, %f437, %f77;\n"
	"	ld.shared.u32 	%r63, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r64, %r11, 1;\n"
	"	setp.ge.s32	%p36, %r64, %r63;\n"
	"	@%p36 bra 	BB11_58;\n"
	"\n"
	"	ld.u64 	%rd94, [%rd29+8];\n"
	"	// Callseq Start 64\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd94;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f70;\n"
	"	st.param.f32	[param2+4], %f71;\n"
	"	st.param.f32	[param2+8], %f72;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f79, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 64\n"
	"	setp.lt.f32	%p37, %f437, %f79;\n"
	"	@%p37 bra 	BB11_51;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd29+8];\n"
	"\n"
	"BB11_51:\n"
	"	min.f32 	%f437, %f437, %f79;\n"
	"	ld.shared.u32 	%r65, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r66, %r11, 2;\n"
	"	setp.ge.s32	%p38, %r66, %r65;\n"
	"	@%p38 bra 	BB11_58;\n"
	"\n"
	"	ld.u64 	%rd95, [%rd29+16];\n"
	"	// Callseq Start 65\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd95;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f70;\n"
	"	st.param.f32	[param2+4], %f71;\n"
	"	st.param.f32	[param2+8], %f72;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f81, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 65\n"
	"	setp.lt.f32	%p39, %f437, %f81;\n"
	"	@%p39 bra 	BB11_54;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd29+16];\n"
	"\n"
	"BB11_54:\n"
	"	min.f32 	%f437, %f437, %f81;\n"
	"	ld.shared.u32 	%r67, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r68, %r11, 3;\n"
	"	setp.ge.s32	%p40, %r68, %r67;\n"
	"	@%p40 bra 	BB11_58;\n"
	"\n"
	"	ld.u64 	%rd96, [%rd29+24];\n"
	"	// Callseq Start 66\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd96;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f70;\n"
	"	st.param.f32	[param2+4], %f71;\n"
	"	st.param.f32	[param2+8], %f72;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f83, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 66\n"
	"	setp.lt.f32	%p41, %f437, %f83;\n"
	"	@%p41 bra 	BB11_57;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd29+24];\n"
	"\n"
	"BB11_57:\n"
	"	min.f32 	%f437, %f437, %f83;\n"
	"	ld.shared.u32 	%r69, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r11, %r11, 4;\n"
	"	setp.lt.s32	%p42, %r11, %r69;\n"
	"	@%p42 bra 	BB11_46;\n"
	"\n"
	"BB11_58:\n"
	"	cvt.f64.f32	%fd32, %f437;\n"
	"	setp.lt.f64	%p43, %fd32, 0d3F50624DD2F1A9FC;\n"
	"	@%p43 bra 	BB11_59;\n"
	"\n"
	"	add.f32 	%f86, %f69, %f437;\n"
	"	// Callseq Start 67\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f86;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f13;\n"
	"	st.param.f32	[param1+4], %f14;\n"
	"	st.param.f32	[param1+8], %f15;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f237, [retval0+0];\n"
	"	ld.param.f32	%f238, [retval0+4];\n"
	"	ld.param.f32	%f239, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 67\n"
	"	// Callseq Start 68\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f237;\n"
	"	st.param.f32	[param0+4], %f238;\n"
	"	st.param.f32	[param0+8], %f239;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f87, [retval0+0];\n"
	"	ld.param.f32	%f88, [retval0+4];\n"
	"	ld.param.f32	%f89, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 68\n"
	"	setp.gt.f32	%p44, %f86, 0f41F00000;\n"
	"	mov.f32 	%f440, 0f41F00000;\n"
	"	@%p44 bra 	BB11_80;\n"
	"\n"
	"	ld.shared.u32 	%r70, [_ZZ8firstRayE1n];\n"
	"	mov.f32 	%f439, 0f41F00000;\n"
	"	setp.lt.s32	%p45, %r70, 1;\n"
	"	@%p45 bra 	BB11_75;\n"
	"\n"
	"	mov.f32 	%f439, 0f41F00000;\n"
	"	mov.u32 	%r13, 0;\n"
	"\n"
	"BB11_63:\n"
	"	.pragma \"nounroll\";\n"
	"	mul.wide.s32 	%rd97, %r13, 8;\n"
	"	add.s64 	%rd40, %rd1, %rd97;\n"
	"	ld.u64 	%rd98, [%rd40];\n"
	"	// Callseq Start 69\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd98;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f87;\n"
	"	st.param.f32	[param2+4], %f88;\n"
	"	st.param.f32	[param2+8], %f89;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f94, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 69\n"
	"	setp.lt.f32	%p46, %f439, %f94;\n"
	"	@%p46 bra 	BB11_65;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd40];\n"
	"\n"
	"BB11_65:\n"
	"	min.f32 	%f439, %f439, %f94;\n"
	"	ld.shared.u32 	%r72, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r73, %r13, 1;\n"
	"	setp.ge.s32	%p47, %r73, %r72;\n"
	"	@%p47 bra 	BB11_75;\n"
	"\n"
	"	ld.u64 	%rd99, [%rd40+8];\n"
	"	// Callseq Start 70\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd99;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f87;\n"
	"	st.param.f32	[param2+4], %f88;\n"
	"	st.param.f32	[param2+8], %f89;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f96, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 70\n"
	"	setp.lt.f32	%p48, %f439, %f96;\n"
	"	@%p48 bra 	BB11_68;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd40+8];\n"
	"\n"
	"BB11_68:\n"
	"	min.f32 	%f439, %f439, %f96;\n"
	"	ld.shared.u32 	%r74, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r75, %r13, 2;\n"
	"	setp.ge.s32	%p49, %r75, %r74;\n"
	"	@%p49 bra 	BB11_75;\n"
	"\n"
	"	ld.u64 	%rd100, [%rd40+16];\n"
	"	// Callseq Start 71\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd100;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f87;\n"
	"	st.param.f32	[param2+4], %f88;\n"
	"	st.param.f32	[param2+8], %f89;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f98, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 71\n"
	"	setp.lt.f32	%p50, %f439, %f98;\n"
	"	@%p50 bra 	BB11_71;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd40+16];\n"
	"\n"
	"BB11_71:\n"
	"	min.f32 	%f439, %f439, %f98;\n"
	"	ld.shared.u32 	%r76, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r77, %r13, 3;\n"
	"	setp.ge.s32	%p51, %r77, %r76;\n"
	"	@%p51 bra 	BB11_75;\n"
	"\n"
	"	ld.u64 	%rd101, [%rd40+24];\n"
	"	// Callseq Start 72\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd101;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f87;\n"
	"	st.param.f32	[param2+4], %f88;\n"
	"	st.param.f32	[param2+8], %f89;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f100, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 72\n"
	"	setp.lt.f32	%p52, %f439, %f100;\n"
	"	@%p52 bra 	BB11_74;\n"
	"\n"
	"	ld.u64 	%rd135, [%rd40+24];\n"
	"\n"
	"BB11_74:\n"
	"	min.f32 	%f439, %f439, %f100;\n"
	"	ld.shared.u32 	%r78, [_ZZ8firstRayE1n];\n"
	"	add.s32 	%r13, %r13, 4;\n"
	"	setp.lt.s32	%p53, %r13, %r78;\n"
	"	@%p53 bra 	BB11_63;\n"
	"\n"
	"BB11_75:\n"
	"	cvt.f64.f32	%fd33, %f439;\n"
	"	setp.lt.f64	%p54, %fd33, 0d3F50624DD2F1A9FC;\n"
	"	@%p54 bra 	BB11_76;\n"
	"\n"
	"	add.f32 	%f440, %f86, %f439;\n"
	"	// Callseq Start 73\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f440;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f13;\n"
	"	st.param.f32	[param1+4], %f14;\n"
	"	st.param.f32	[param1+8], %f15;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f243, [retval0+0];\n"
	"	ld.param.f32	%f244, [retval0+4];\n"
	"	ld.param.f32	%f245, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 73\n"
	"	// Callseq Start 74\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f243;\n"
	"	st.param.f32	[param0+4], %f244;\n"
	"	st.param.f32	[param0+8], %f245;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f36, [retval0+0];\n"
	"	ld.param.f32	%f37, [retval0+4];\n"
	"	ld.param.f32	%f38, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 74\n"
	"	setp.gt.f32	%p55, %f440, 0f41F00000;\n"
	"	mov.f32 	%f242, 0f41F00000;\n"
	"	@%p55 bra 	BB11_78;\n"
	"\n"
	"	add.s32 	%r6, %r6, 4;\n"
	"	setp.lt.u32	%p56, %r6, 60;\n"
	"	@%p56 bra 	BB11_11;\n"
	"	bra.uni 	BB11_80;\n"
	"\n"
	"BB11_42:\n"
	"	mov.f32 	%f440, %f52;\n"
	"	bra.uni 	BB11_80;\n"
	"\n"
	"BB11_59:\n"
	"	mov.f32 	%f440, %f69;\n"
	"	bra.uni 	BB11_80;\n"
	"\n"
	"BB11_76:\n"
	"	mov.f32 	%f440, %f86;\n"
	"	bra.uni 	BB11_80;\n"
	"\n"
	"BB11_78:\n"
	"	mov.f32 	%f440, %f242;\n"
	"\n"
	"BB11_80:\n"
	"	// Callseq Start 75\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f440;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f13;\n"
	"	st.param.f32	[param1+4], %f14;\n"
	"	st.param.f32	[param1+8], %f15;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f248, [retval0+0];\n"
	"	ld.param.f32	%f249, [retval0+4];\n"
	"	ld.param.f32	%f250, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 75\n"
	"	// Callseq Start 76\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f248;\n"
	"	st.param.f32	[param0+4], %f249;\n"
	"	st.param.f32	[param0+8], %f250;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f111, [retval0+0];\n"
	"	ld.param.f32	%f112, [retval0+4];\n"
	"	ld.param.f32	%f113, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 76\n"
	"	mov.f32 	%f446, 0f3F800000;\n"
	"	mov.f32 	%f445, 0f00000000;\n"
	"	setp.geu.f32	%p57, %f440, 0f41F00000;\n"
	"	@%p57 bra 	BB11_110;\n"
	"\n"
	"	ld.param.u64 	%rd109, [firstRay_param_7];\n"
	"	// Callseq Start 77\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f111;\n"
	"	st.param.f32	[param2+4], %f112;\n"
	"	st.param.f32	[param2+8], %f113;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f254, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 77\n"
	"	add.f32 	%f255, %f111, 0f3A83126F;\n"
	"	// Callseq Start 78\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f255;\n"
	"	st.param.f32	[param2+4], %f112;\n"
	"	st.param.f32	[param2+8], %f113;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f256, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 78\n"
	"	sub.f32 	%f257, %f256, %f254;\n"
	"	add.f32 	%f258, %f112, 0f3A83126F;\n"
	"	// Callseq Start 79\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f111;\n"
	"	st.param.f32	[param2+4], %f258;\n"
	"	st.param.f32	[param2+8], %f113;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f259, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 79\n"
	"	sub.f32 	%f260, %f259, %f254;\n"
	"	add.f32 	%f261, %f113, 0f3A83126F;\n"
	"	// Callseq Start 80\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f111;\n"
	"	st.param.f32	[param2+4], %f112;\n"
	"	st.param.f32	[param2+8], %f261;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f262, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 80\n"
	"	sub.f32 	%f263, %f262, %f254;\n"
	"	// Callseq Start 81\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f257;\n"
	"	st.param.f32	[param0+4], %f260;\n"
	"	st.param.f32	[param0+8], %f263;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Z9normalize6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f264, [retval0+0];\n"
	"	ld.param.f32	%f265, [retval0+4];\n"
	"	ld.param.f32	%f266, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 81\n"
	"	// Callseq Start 82\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f111;\n"
	"	st.param.f32	[param0+4], %f112;\n"
	"	st.param.f32	[param0+8], %f113;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f267, [retval0+0];\n"
	"	ld.param.f32	%f268, [retval0+4];\n"
	"	ld.param.f32	%f269, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 82\n"
	"	// Callseq Start 83\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f111;\n"
	"	st.param.f32	[param0+4], %f112;\n"
	"	st.param.f32	[param0+8], %f113;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f270, [retval0+0];\n"
	"	ld.param.f32	%f271, [retval0+4];\n"
	"	ld.param.f32	%f272, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 83\n"
	"	// Callseq Start 84\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f270;\n"
	"	st.param.f32	[param0+4], %f271;\n"
	"	st.param.f32	[param0+8], %f272;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f273, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 84\n"
	"	// Callseq Start 85\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f267;\n"
	"	st.param.f32	[param0+4], %f268;\n"
	"	st.param.f32	[param0+8], %f269;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f273;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zdv6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f274, [retval0+0];\n"
	"	ld.param.f32	%f275, [retval0+4];\n"
	"	ld.param.f32	%f276, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 85\n"
	"	// Callseq Start 86\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f111;\n"
	"	st.param.f32	[param2+4], %f112;\n"
	"	st.param.f32	[param2+8], %f113;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f277, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 86\n"
	"	// Callseq Start 87\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f255;\n"
	"	st.param.f32	[param2+4], %f112;\n"
	"	st.param.f32	[param2+8], %f113;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f278, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 87\n"
	"	sub.f32 	%f279, %f278, %f277;\n"
	"	// Callseq Start 88\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f111;\n"
	"	st.param.f32	[param2+4], %f258;\n"
	"	st.param.f32	[param2+8], %f113;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f280, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 88\n"
	"	sub.f32 	%f281, %f280, %f277;\n"
	"	// Callseq Start 89\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd58;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd135;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f111;\n"
	"	st.param.f32	[param2+4], %f112;\n"
	"	st.param.f32	[param2+8], %f261;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f282, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 89\n"
	"	sub.f32 	%f283, %f282, %f277;\n"
	"	// Callseq Start 90\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f279;\n"
	"	st.param.f32	[param0+4], %f281;\n"
	"	st.param.f32	[param0+8], %f283;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Z9normalize6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f117, [retval0+0];\n"
	"	ld.param.f32	%f118, [retval0+4];\n"
	"	ld.param.f32	%f119, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 90\n"
	"	cvta.to.global.u64 	%rd51, %rd109;\n"
	"	setp.eq.s64	%p58, %rd62, 0;\n"
	"	mov.f32 	%f446, 0f3E4CCCCD;\n"
	"	mov.u32 	%r154, 0;\n"
	"	mov.u64 	%rd141, 0;\n"
	"	mov.f32 	%f445, 0f437F0000;\n"
	"	@%p58 bra 	BB11_110;\n"
	"	bra.uni 	BB11_82;\n"
	"\n"
	"BB11_104:\n"
	"	and.b32  	%r102, %r17, 2147483647;\n"
	"	setp.ne.s32	%p89, %r102, 2146435072;\n"
	"	@%p89 bra 	BB11_105;\n"
	"\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r103, %temp}, %fd3;\n"
	"	}\n"
	"	setp.ne.s32	%p90, %r103, 0;\n"
	"	mov.f64 	%fd45, %fd44;\n"
	"	@%p90 bra 	BB11_109;\n"
	"\n"
	"	shr.s32 	%r104, %r18, 31;\n"
	"	and.b32  	%r105, %r104, -2146435072;\n"
	"	add.s32 	%r106, %r105, 2146435072;\n"
	"	or.b32  	%r107, %r106, -2147483648;\n"
	"	selp.b32	%r108, %r107, %r106, %p2;\n"
	"	mov.u32 	%r109, 0;\n"
	"	mov.b64 	%fd45, {%r109, %r108};\n"
	"	bra.uni 	BB11_109;\n"
	"\n"
	"BB11_105:\n"
	"	mov.f64 	%fd45, %fd44;\n"
	"	bra.uni 	BB11_109;\n"
	"\n"
	"BB11_82:\n"
	"	shl.b64 	%rd103, %rd141, 4;\n"
	"	add.s64 	%rd53, %rd51, %rd103;\n"
	"	ld.global.f32 	%f286, [%rd53];\n"
	"	ld.global.f32 	%f287, [%rd53+4];\n"
	"	ld.global.f32 	%f288, [%rd53+8];\n"
	"	// Callseq Start 91\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f286;\n"
	"	st.param.f32	[param0+4], %f287;\n"
	"	st.param.f32	[param0+8], %f288;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f111;\n"
	"	st.param.f32	[param1+4], %f112;\n"
	"	st.param.f32	[param1+8], %f113;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f289, [retval0+0];\n"
	"	ld.param.f32	%f290, [retval0+4];\n"
	"	ld.param.f32	%f291, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 91\n"
	"	// Callseq Start 92\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f289;\n"
	"	st.param.f32	[param0+4], %f290;\n"
	"	st.param.f32	[param0+8], %f291;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Z9normalize6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f292, [retval0+0];\n"
	"	ld.param.f32	%f293, [retval0+4];\n"
	"	ld.param.f32	%f294, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 92\n"
	"	// Callseq Start 93\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f292;\n"
	"	st.param.f32	[param0+4], %f293;\n"
	"	st.param.f32	[param0+8], %f294;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f117;\n"
	"	st.param.f32	[param1+4], %f118;\n"
	"	st.param.f32	[param1+8], %f119;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z3dot6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f295, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 93\n"
	"	add.f32 	%f296, %f295, %f295;\n"
	"	// Callseq Start 94\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f296;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f117;\n"
	"	st.param.f32	[param1+4], %f118;\n"
	"	st.param.f32	[param1+8], %f119;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f297, [retval0+0];\n"
	"	ld.param.f32	%f298, [retval0+4];\n"
	"	ld.param.f32	%f299, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 94\n"
	"	// Callseq Start 95\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f297;\n"
	"	st.param.f32	[param0+4], %f298;\n"
	"	st.param.f32	[param0+8], %f299;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f292;\n"
	"	st.param.f32	[param1+4], %f293;\n"
	"	st.param.f32	[param1+8], %f294;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f300, [retval0+0];\n"
	"	ld.param.f32	%f301, [retval0+4];\n"
	"	ld.param.f32	%f302, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 95\n"
	"	// Callseq Start 96\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f292;\n"
	"	st.param.f32	[param0+4], %f293;\n"
	"	st.param.f32	[param0+8], %f294;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f117;\n"
	"	st.param.f32	[param1+4], %f118;\n"
	"	st.param.f32	[param1+8], %f119;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z3dot6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f303, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 96\n"
	"	mov.f32 	%f304, 0f3F800000;\n"
	"	min.f32 	%f305, %f303, %f304;\n"
	"	mov.f32 	%f306, 0f00000000;\n"
	"	max.f32 	%f307, %f305, %f306;\n"
	"	mul.f32 	%f121, %f307, 0f3F000000;\n"
	"	// Callseq Start 97\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f13;\n"
	"	st.param.f32	[param0+4], %f14;\n"
	"	st.param.f32	[param0+8], %f15;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zng6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f308, [retval0+0];\n"
	"	ld.param.f32	%f309, [retval0+4];\n"
	"	ld.param.f32	%f310, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 97\n"
	"	// Callseq Start 98\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f300;\n"
	"	st.param.f32	[param0+4], %f301;\n"
	"	st.param.f32	[param0+8], %f302;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f308;\n"
	"	st.param.f32	[param1+4], %f309;\n"
	"	st.param.f32	[param1+8], %f310;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z3dot6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f122, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 98\n"
	"	mov.f32 	%f311, 0f40A00000;\n"
	"	cvt.rzi.f32.f32	%f312, %f311;\n"
	"	add.f32 	%f313, %f312, %f312;\n"
	"	mov.f32 	%f314, 0f41200000;\n"
	"	sub.f32 	%f315, %f314, %f313;\n"
	"	abs.f32 	%f123, %f315;\n"
	"	abs.f32 	%f124, %f122;\n"
	"	setp.lt.f32	%p59, %f124, 0f00800000;\n"
	"	mul.f32 	%f316, %f124, 0f4B800000;\n"
	"	selp.f32	%f317, 0fC3170000, 0fC2FE0000, %p59;\n"
	"	selp.f32	%f318, %f316, %f124, %p59;\n"
	"	mov.b32 	 %r80, %f318;\n"
	"	and.b32  	%r81, %r80, 8388607;\n"
	"	or.b32  	%r82, %r81, 1065353216;\n"
	"	mov.b32 	 %f319, %r82;\n"
	"	shr.u32 	%r83, %r80, 23;\n"
	"	cvt.rn.f32.u32	%f320, %r83;\n"
	"	add.f32 	%f321, %f317, %f320;\n"
	"	setp.gt.f32	%p60, %f319, 0f3FB504F3;\n"
	"	mul.f32 	%f322, %f319, 0f3F000000;\n"
	"	add.f32 	%f323, %f321, 0f3F800000;\n"
	"	selp.f32	%f324, %f322, %f319, %p60;\n"
	"	selp.f32	%f325, %f323, %f321, %p60;\n"
	"	add.f32 	%f326, %f324, 0fBF800000;\n"
	"	add.f32 	%f285, %f324, 0f3F800000;\n"
	"	// inline asm\n"
	"	rcp.approx.ftz.f32 %f284,%f285;\n"
	"	// inline asm\n"
	"	add.f32 	%f327, %f326, %f326;\n"
	"	mul.f32 	%f328, %f284, %f327;\n"
	"	mul.f32 	%f329, %f328, %f328;\n"
	"	mov.f32 	%f330, 0f3C4CAF63;\n"
	"	mov.f32 	%f331, 0f3B18F0FE;\n"
	"	fma.rn.f32 	%f332, %f331, %f329, %f330;\n"
	"	mov.f32 	%f333, 0f3DAAAABD;\n"
	"	fma.rn.f32 	%f334, %f332, %f329, %f333;\n"
	"	mul.rn.f32 	%f335, %f334, %f329;\n"
	"	mul.rn.f32 	%f336, %f335, %f328;\n"
	"	sub.f32 	%f337, %f326, %f328;\n"
	"	neg.f32 	%f338, %f328;\n"
	"	add.f32 	%f339, %f337, %f337;\n"
	"	fma.rn.f32 	%f340, %f338, %f326, %f339;\n"
	"	mul.rn.f32 	%f341, %f284, %f340;\n"
	"	add.f32 	%f342, %f336, %f328;\n"
	"	sub.f32 	%f343, %f328, %f342;\n"
	"	add.f32 	%f344, %f336, %f343;\n"
	"	add.f32 	%f345, %f341, %f344;\n"
	"	add.f32 	%f346, %f342, %f345;\n"
	"	sub.f32 	%f347, %f342, %f346;\n"
	"	add.f32 	%f348, %f345, %f347;\n"
	"	mov.f32 	%f349, 0f3F317200;\n"
	"	mul.rn.f32 	%f350, %f325, %f349;\n"
	"	mov.f32 	%f351, 0f35BFBE8E;\n"
	"	mul.rn.f32 	%f352, %f325, %f351;\n"
	"	add.f32 	%f353, %f350, %f346;\n"
	"	sub.f32 	%f354, %f350, %f353;\n"
	"	add.f32 	%f355, %f346, %f354;\n"
	"	add.f32 	%f356, %f348, %f355;\n"
	"	add.f32 	%f357, %f352, %f356;\n"
	"	add.f32 	%f358, %f353, %f357;\n"
	"	sub.f32 	%f359, %f353, %f358;\n"
	"	add.f32 	%f360, %f357, %f359;\n"
	"	mul.rn.f32 	%f361, %f314, %f358;\n"
	"	neg.f32 	%f362, %f361;\n"
	"	fma.rn.f32 	%f363, %f314, %f358, %f362;\n"
	"	fma.rn.f32 	%f364, %f314, %f360, %f363;\n"
	"	fma.rn.f32 	%f365, %f306, %f358, %f364;\n"
	"	add.rn.f32 	%f366, %f361, %f365;\n"
	"	neg.f32 	%f367, %f366;\n"
	"	add.rn.f32 	%f368, %f361, %f367;\n"
	"	add.rn.f32 	%f369, %f368, %f365;\n"
	"	mov.b32 	 %r84, %f366;\n"
	"	setp.eq.s32	%p61, %r84, 1118925336;\n"
	"	add.s32 	%r85, %r84, -1;\n"
	"	mov.b32 	 %f370, %r85;\n"
	"	add.f32 	%f371, %f369, 0f37000000;\n"
	"	selp.f32	%f372, %f370, %f366, %p61;\n"
	"	selp.f32	%f125, %f371, %f369, %p61;\n"
	"	mul.f32 	%f373, %f372, 0f3FB8AA3B;\n"
	"	cvt.rzi.f32.f32	%f374, %f373;\n"
	"	mov.f32 	%f375, 0fBF317200;\n"
	"	fma.rn.f32 	%f376, %f374, %f375, %f372;\n"
	"	mov.f32 	%f377, 0fB5BFBE8E;\n"
	"	fma.rn.f32 	%f378, %f374, %f377, %f376;\n"
	"	mul.f32 	%f379, %f378, 0f3FB8AA3B;\n"
	"	ex2.approx.ftz.f32 	%f380, %f379;\n"
	"	add.f32 	%f381, %f374, 0f00000000;\n"
	"	ex2.approx.f32 	%f382, %f381;\n"
	"	mul.f32 	%f383, %f380, %f382;\n"
	"	setp.lt.f32	%p62, %f372, 0fC2D20000;\n"
	"	selp.f32	%f384, 0f00000000, %f383, %p62;\n"
	"	setp.gt.f32	%p63, %f372, 0f42D20000;\n"
	"	selp.f32	%f442, 0f7F800000, %f384, %p63;\n"
	"	setp.eq.f32	%p64, %f442, 0f7F800000;\n"
	"	@%p64 bra 	BB11_84;\n"
	"\n"
	"	fma.rn.f32 	%f442, %f442, %f125, %f442;\n"
	"\n"
	"BB11_84:\n"
	"	setp.lt.f32	%p65, %f122, 0f00000000;\n"
	"	setp.eq.f32	%p66, %f123, 0f3F800000;\n"
	"	and.pred  	%p1, %p65, %p66;\n"
	"	mov.b32 	 %r86, %f442;\n"
	"	xor.b32  	%r87, %r86, -2147483648;\n"
	"	mov.b32 	 %f385, %r87;\n"
	"	selp.f32	%f444, %f385, %f442, %p1;\n"
	"	setp.eq.f32	%p67, %f122, 0f00000000;\n"
	"	@%p67 bra 	BB11_87;\n"
	"	bra.uni 	BB11_85;\n"
	"\n"
	"BB11_87:\n"
	"	add.f32 	%f388, %f122, %f122;\n"
	"	selp.f32	%f444, %f388, 0f00000000, %p66;\n"
	"	bra.uni 	BB11_88;\n"
	"\n"
	"BB11_85:\n"
	"	setp.geu.f32	%p68, %f122, 0f00000000;\n"
	"	@%p68 bra 	BB11_88;\n"
	"\n"
	"	cvt.rzi.f32.f32	%f387, %f314;\n"
	"	setp.neu.f32	%p69, %f387, 0f41200000;\n"
	"	selp.f32	%f444, 0f7FFFFFFF, %f444, %p69;\n"
	"\n"
	"BB11_88:\n"
	"	add.f32 	%f389, %f124, 0f41200000;\n"
	"	mov.b32 	 %r88, %f389;\n"
	"	setp.lt.s32	%p71, %r88, 2139095040;\n"
	"	@%p71 bra 	BB11_93;\n"
	"\n"
	"	setp.gtu.f32	%p72, %f124, 0f7F800000;\n"
	"	@%p72 bra 	BB11_92;\n"
	"	bra.uni 	BB11_90;\n"
	"\n"
	"BB11_92:\n"
	"	add.f32 	%f444, %f122, 0f41200000;\n"
	"	bra.uni 	BB11_93;\n"
	"\n"
	"BB11_90:\n"
	"	setp.neu.f32	%p73, %f124, 0f7F800000;\n"
	"	@%p73 bra 	BB11_93;\n"
	"\n"
	"	selp.f32	%f444, 0fFF800000, 0f7F800000, %p1;\n"
	"\n"
	"BB11_93:\n"
	"	setp.eq.f32	%p74, %f122, 0f3F800000;\n"
	"	selp.f32	%f390, 0f3F800000, %f444, %p74;\n"
	"	min.f32 	%f392, %f390, %f304;\n"
	"	max.f32 	%f394, %f392, %f306;\n"
	"	fma.rn.f32 	%f395, %f394, 0f3F000000, %f121;\n"
	"	ld.global.f32 	%f396, [%rd53+12];\n"
	"	mul.f32 	%f136, %f396, %f395;\n"
	"	ld.global.f32 	%f397, [%rd53];\n"
	"	ld.global.f32 	%f398, [%rd53+4];\n"
	"	ld.global.f32 	%f399, [%rd53+8];\n"
	"	// Callseq Start 99\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f397;\n"
	"	st.param.f32	[param0+4], %f398;\n"
	"	st.param.f32	[param0+8], %f399;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f111;\n"
	"	st.param.f32	[param1+4], %f112;\n"
	"	st.param.f32	[param1+8], %f113;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmi6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f400, [retval0+0];\n"
	"	ld.param.f32	%f401, [retval0+4];\n"
	"	ld.param.f32	%f402, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 99\n"
	"	// Callseq Start 100\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f400;\n"
	"	st.param.f32	[param0+4], %f401;\n"
	"	st.param.f32	[param0+8], %f402;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f137, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 100\n"
	"	cvt.f64.f32	%fd3, %f137;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r17}, %fd3;\n"
	"	}\n"
	"	mov.f64 	%fd34, 0d4000000000000000;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r18}, %fd34;\n"
	"	}\n"
	"	bfe.u32 	%r89, %r18, 20, 11;\n"
	"	add.s32 	%r90, %r89, -1012;\n"
	"	mov.u64 	%rd104, 4611686018427387904;\n"
	"	shl.b64 	%rd54, %rd104, %r90;\n"
	"	setp.ne.s64	%p75, %rd54, -9223372036854775808;\n"
	"	setp.eq.s64	%p76, %rd54, -9223372036854775808;\n"
	"	abs.f64 	%fd4, %fd3;\n"
	"	// Callseq Start 101\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.f64	[param0+0], %fd4;\n"
	"	.param .b64 retval0;\n"
	"	call.uni (retval0), \n"
	"	__internal_accurate_pow, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f64	%fd44, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 101\n"
	"	setp.gt.s32	%p77, %r17, -1;\n"
	"	setp.lt.s32	%p78, %r17, 0;\n"
	"	and.pred  	%p2, %p78, %p76;\n"
	"	or.pred  	%p79, %p77, %p75;\n"
	"	@%p79 bra 	BB11_95;\n"
	"\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r91}, %fd44;\n"
	"	}\n"
	"	xor.b32  	%r92, %r91, -2147483648;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r93, %temp}, %fd44;\n"
	"	}\n"
	"	mov.b64 	%fd44, {%r93, %r92};\n"
	"\n"
	"BB11_95:\n"
	"	setp.eq.f32	%p80, %f137, 0f00000000;\n"
	"	@%p80 bra 	BB11_98;\n"
	"	bra.uni 	BB11_96;\n"
	"\n"
	"BB11_98:\n"
	"	selp.b32	%r94, %r17, 0, %p76;\n"
	"	mov.u32 	%r95, 0;\n"
	"	or.b32  	%r96, %r94, 2146435072;\n"
	"	setp.lt.s32	%p84, %r18, 0;\n"
	"	selp.b32	%r97, %r96, %r94, %p84;\n"
	"	mov.b64 	%fd44, {%r95, %r97};\n"
	"	bra.uni 	BB11_99;\n"
	"\n"
	"BB11_96:\n"
	"	@%p77 bra 	BB11_99;\n"
	"\n"
	"	cvt.rzi.f64.f64	%fd36, %fd34;\n"
	"	setp.neu.f64	%p82, %fd36, 0d4000000000000000;\n"
	"	selp.f64	%fd44, 0dFFF8000000000000, %fd44, %p82;\n"
	"\n"
	"BB11_99:\n"
	"	add.f64 	%fd45, %fd3, 0d4000000000000000;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r98}, %fd45;\n"
	"	}\n"
	"	and.b32  	%r99, %r98, 2146435072;\n"
	"	setp.ne.s32	%p85, %r99, 2146435072;\n"
	"	@%p85 bra 	BB11_100;\n"
	"\n"
	"	setp.gtu.f64	%p86, %fd4, 0d7FF0000000000000;\n"
	"	@%p86 bra 	BB11_109;\n"
	"\n"
	"	and.b32  	%r100, %r18, 2147483647;\n"
	"	setp.ne.s32	%p87, %r100, 2146435072;\n"
	"	@%p87 bra 	BB11_104;\n"
	"\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r101, %temp}, %fd34;\n"
	"	}\n"
	"	setp.eq.s32	%p88, %r101, 0;\n"
	"	@%p88 bra 	BB11_108;\n"
	"	bra.uni 	BB11_104;\n"
	"\n"
	"BB11_108:\n"
	"	setp.gt.f64	%p91, %fd4, 0d3FF0000000000000;\n"
	"	selp.b32	%r110, 2146435072, 0, %p91;\n"
	"	mov.u32 	%r111, 0;\n"
	"	xor.b32  	%r112, %r110, 2146435072;\n"
	"	setp.lt.s32	%p92, %r18, 0;\n"
	"	selp.b32	%r113, %r112, %r110, %p92;\n"
	"	setp.eq.f32	%p93, %f137, 0fBF800000;\n"
	"	selp.b32	%r114, 1072693248, %r113, %p93;\n"
	"	mov.b64 	%fd45, {%r111, %r114};\n"
	"	bra.uni 	BB11_109;\n"
	"\n"
	"BB11_100:\n"
	"	mov.f64 	%fd45, %fd44;\n"
	"\n"
	"BB11_109:\n"
	"	setp.eq.f32	%p94, %f137, 0f3F800000;\n"
	"	selp.f64	%fd38, 0d3FF0000000000000, %fd45, %p94;\n"
	"	cvt.f64.f32	%fd39, %f136;\n"
	"	div.rn.f64 	%fd40, %fd39, %fd38;\n"
	"	cvt.f64.f32	%fd41, %f446;\n"
	"	add.f64 	%fd42, %fd41, %fd40;\n"
	"	cvt.rn.f32.f64	%f446, %fd42;\n"
	"	add.s32 	%r154, %r154, 1;\n"
	"	cvt.s64.s32	%rd141, %r154;\n"
	"	setp.lt.u64	%p95, %rd141, %rd62;\n"
	"	@%p95 bra 	BB11_82;\n"
	"\n"
	"BB11_110:\n"
	"	mul.f32 	%f141, %f445, %f446;\n"
	"	setp.gt.f32	%p96, %f141, 0f437F0000;\n"
	"	mov.u16 	%rs5, 255;\n"
	"	mov.u16 	%rs10, %rs5;\n"
	"	@%p96 bra 	BB11_113;\n"
	"\n"
	"	setp.lt.f32	%p97, %f141, 0f00000000;\n"
	"	mov.u16 	%rs10, 0;\n"
	"	@%p97 bra 	BB11_113;\n"
	"\n"
	"	cvt.rzi.s32.f32	%r115, %f141;\n"
	"	cvt.u16.u32	%rs10, %r115;\n"
	"\n"
	"BB11_113:\n"
	"	ld.param.u64 	%rd108, [firstRay_param_0];\n"
	"	mov.u32 	%r137, %tid.y;\n"
	"	mov.u32 	%r136, %ctaid.y;\n"
	"	mov.u32 	%r135, %ntid.y;\n"
	"	mad.lo.s32 	%r134, %r135, %r136, %r137;\n"
	"	mov.u32 	%r133, %tid.x;\n"
	"	mov.u32 	%r132, %ctaid.x;\n"
	"	mov.u32 	%r131, %ntid.x;\n"
	"	mad.lo.s32 	%r130, %r131, %r132, %r133;\n"
	"	ld.param.u32 	%r129, [firstRay_param_1];\n"
	"	mad.lo.s32 	%r124, %r134, %r129, %r130;\n"
	"	cvta.to.global.u64 	%rd105, %rd108;\n"
	"	mul.wide.s32 	%rd106, %r124, 4;\n"
	"	add.s64 	%rd56, %rd105, %rd106;\n"
	"	st.global.u8 	[%rd56], %rs10;\n"
	"	mul.f32 	%f142, %f446, 0f00000000;\n"
	"	setp.gt.f32	%p98, %f142, 0f437F0000;\n"
	"	mov.u16 	%rs11, %rs5;\n"
	"	@%p98 bra 	BB11_116;\n"
	"\n"
	"	setp.lt.f32	%p99, %f142, 0f00000000;\n"
	"	mov.u16 	%rs11, 0;\n"
	"	@%p99 bra 	BB11_116;\n"
	"\n"
	"	cvt.rzi.s32.f32	%r125, %f142;\n"
	"	cvt.u16.u32	%rs11, %r125;\n"
	"\n"
	"BB11_116:\n"
	"	mov.u32 	%r148, %tid.y;\n"
	"	neg.s32 	%r147, %r148;\n"
	"	mov.u32 	%r138, %tid.x;\n"
	"	setp.eq.s32	%p3, %r138, %r147;\n"
	"	st.global.u8 	[%rd56+1], %rs11;\n"
	"	st.global.v2.u8 	[%rd56+2], {%rs11, %rs5};\n"
	"	bar.sync 	0;\n"
	"	@!%p3 bra 	BB11_118;\n"
	"	bra.uni 	BB11_117;\n"
	"\n"
	"BB11_117:\n"
	"	ld.shared.u64 	%rd107, [_ZZ8firstRayE6__addr+8];\n"
	"	// Callseq Start 102\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd107;\n"
	"	call.uni \n"
	"	free, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 102\n"
	"\n"
	"BB11_118:\n"
	"	ret;\n"
	"}\n"
	"\n"
	"	// .globl	getVisibleShape\n"
	".visible .entry getVisibleShape(\n"
	"	.param .u64 getVisibleShape_param_0,\n"
	"	.param .u64 getVisibleShape_param_1,\n"
	"	.param .u64 getVisibleShape_param_2,\n"
	"	.param .u64 getVisibleShape_param_3,\n"
	"	.param .u64 getVisibleShape_param_4,\n"
	"	.param .u64 getVisibleShape_param_5,\n"
	"	.param .align 4 .b8 getVisibleShape_param_6[12],\n"
	"	.param .align 4 .b8 getVisibleShape_param_7[12],\n"
	"	.param .f32 getVisibleShape_param_8\n"
	")\n"
	"{\n"
	"	.reg .pred 	%p<4>;\n"
	"	.reg .f32 	%f<35>;\n"
	"	.reg .b32 	%r<6>;\n"
	"	.reg .f64 	%fd<10>;\n"
	"	.reg .b64 	%rd<16>;\n"
	"\n"
	"\n"
	"	ld.param.u64 	%rd5, [getVisibleShape_param_0];\n"
	"	ld.param.u64 	%rd6, [getVisibleShape_param_2];\n"
	"	ld.param.u64 	%rd9, [getVisibleShape_param_3];\n"
	"	ld.param.u64 	%rd7, [getVisibleShape_param_4];\n"
	"	ld.param.u64 	%rd8, [getVisibleShape_param_5];\n"
	"	ld.param.f32 	%f21, [getVisibleShape_param_6+8];\n"
	"	ld.param.f32 	%f20, [getVisibleShape_param_6+4];\n"
	"	ld.param.f32 	%f19, [getVisibleShape_param_6];\n"
	"	ld.param.f32 	%f24, [getVisibleShape_param_7+8];\n"
	"	ld.param.f32 	%f23, [getVisibleShape_param_7+4];\n"
	"	ld.param.f32 	%f22, [getVisibleShape_param_7];\n"
	"	ld.param.f32 	%f25, [getVisibleShape_param_8];\n"
	"	mov.u32 	%r1, %ntid.x;\n"
	"	mov.u32 	%r2, %ctaid.x;\n"
	"	mov.u32 	%r3, %tid.x;\n"
	"	mad.lo.s32 	%r4, %r1, %r2, %r3;\n"
	"	cvt.s64.s32	%rd1, %r4;\n"
	"	setp.ge.u64	%p1, %rd1, %rd9;\n"
	"	@%p1 bra 	BB12_5;\n"
	"\n"
	"	cvta.to.global.u64 	%rd10, %rd6;\n"
	"	// Callseq Start 103\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f22;\n"
	"	st.param.f32	[param0+4], %f23;\n"
	"	st.param.f32	[param0+8], %f24;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z6length6float3, \n"
	"	(\n"
	"	param0\n"
	"	);\n"
	"	ld.param.f32	%f27, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 103\n"
	"	// Callseq Start 104\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f22;\n"
	"	st.param.f32	[param0+4], %f23;\n"
	"	st.param.f32	[param0+8], %f24;\n"
	"	.param .b32 param1;\n"
	"	st.param.f32	[param1+0], %f27;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zdv6float3f, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f1, [retval0+0];\n"
	"	ld.param.f32	%f2, [retval0+4];\n"
	"	ld.param.f32	%f3, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 104\n"
	"	shl.b64 	%rd11, %rd1, 3;\n"
	"	add.s64 	%rd2, %rd10, %rd11;\n"
	"	cvt.f64.f32	%fd3, %f25;\n"
	"	mul.f64 	%fd1, %fd3, 0d3FF8000000000000;\n"
	"	cvt.f64.f32	%fd2, %f27;\n"
	"	cvta.to.global.u64 	%rd3, %rd8;\n"
	"	cvta.to.global.u64 	%rd4, %rd7;\n"
	"	mov.f32 	%f34, 0f00000000;\n"
	"	mov.f32 	%f31, %f21;\n"
	"	mov.f32 	%f32, %f20;\n"
	"	mov.f32 	%f33, %f19;\n"
	"\n"
	"BB12_2:\n"
	"	ld.global.u64 	%rd12, [%rd2];\n"
	"	// Callseq Start 105\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b64 param0;\n"
	"	st.param.b64	[param0+0], %rd5;\n"
	"	.param .b64 param1;\n"
	"	st.param.b64	[param1+0], %rd12;\n"
	"	.param .align 4 .b8 param2[12];\n"
	"	st.param.f32	[param2+0], %f33;\n"
	"	st.param.f32	[param2+4], %f32;\n"
	"	st.param.f32	[param2+8], %f31;\n"
	"	.param .b32 retval0;\n"
	"	call.uni (retval0), \n"
	"	_Z12rootDistanceP7shape_km6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1, \n"
	"	param2\n"
	"	);\n"
	"	ld.param.f32	%f11, [retval0+0];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 105\n"
	"	add.f32 	%f34, %f34, %f11;\n"
	"	// Callseq Start 106\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .b32 param0;\n"
	"	st.param.f32	[param0+0], %f34;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f1;\n"
	"	st.param.f32	[param1+4], %f2;\n"
	"	st.param.f32	[param1+8], %f3;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zmlf6float3, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f28, [retval0+0];\n"
	"	ld.param.f32	%f29, [retval0+4];\n"
	"	ld.param.f32	%f30, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 106\n"
	"	// Callseq Start 107\n"
	"	{\n"
	"	.reg .b32 temp_param_reg;\n"
	"	// <end>}\n"
	"	.param .align 4 .b8 param0[12];\n"
	"	st.param.f32	[param0+0], %f28;\n"
	"	st.param.f32	[param0+4], %f29;\n"
	"	st.param.f32	[param0+8], %f30;\n"
	"	.param .align 4 .b8 param1[12];\n"
	"	st.param.f32	[param1+0], %f19;\n"
	"	st.param.f32	[param1+4], %f20;\n"
	"	st.param.f32	[param1+8], %f21;\n"
	"	.param .align 4 .b8 retval0[12];\n"
	"	call.uni (retval0), \n"
	"	_Zpl6float3S_, \n"
	"	(\n"
	"	param0, \n"
	"	param1\n"
	"	);\n"
	"	ld.param.f32	%f33, [retval0+0];\n"
	"	ld.param.f32	%f32, [retval0+4];\n"
	"	ld.param.f32	%f31, [retval0+8];\n"
	"	\n"
	"	//{\n"
	"	}// Callseq End 107\n"
	"	setp.geu.f32	%p2, %f34, 0f41F00000;\n"
	"	@%p2 bra 	BB12_5;\n"
	"\n"
	"	cvt.f64.f32	%fd4, %f34;\n"
	"	mul.f64 	%fd5, %fd1, %fd4;\n"
	"	div.rn.f64 	%fd6, %fd5, %fd2;\n"
	"	mov.f64 	%fd7, 0d3F50624DD2F1A9FC;\n"
	"	max.f64 	%fd8, %fd6, %fd7;\n"
	"	cvt.f64.f32	%fd9, %f11;\n"
	"	setp.gt.f64	%p3, %fd9, %fd8;\n"
	"	@%p3 bra 	BB12_2;\n"
	"\n"
	"	atom.global.add.u32 	%r5, [%rd3], 1;\n"
	"	ld.global.u64 	%rd13, [%rd2];\n"
	"	mul.wide.s32 	%rd14, %r5, 8;\n"
	"	add.s64 	%rd15, %rd4, %rd14;\n"
	"	st.global.u64 	[%rd15], %rd13;\n"
	"\n"
	"BB12_5:\n"
	"	ret;\n"
	"}\n"
	"\n"
	".func  (.param .b64 func_retval0) __internal_accurate_pow(\n"
	"	.param .b64 __internal_accurate_pow_param_0\n"
	")\n"
	"{\n"
	"	.reg .pred 	%p<9>;\n"
	"	.reg .f32 	%f<3>;\n"
	"	.reg .b32 	%r<53>;\n"
	"	.reg .f64 	%fd<138>;\n"
	"\n"
	"\n"
	"	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r50}, %fd12;\n"
	"	}\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r49, %temp}, %fd12;\n"
	"	}\n"
	"	shr.u32 	%r51, %r50, 20;\n"
	"	setp.ne.s32	%p1, %r51, 0;\n"
	"	@%p1 bra 	BB13_2;\n"
	"\n"
	"	mul.f64 	%fd13, %fd12, 0d4350000000000000;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r50}, %fd13;\n"
	"	}\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r49, %temp}, %fd13;\n"
	"	}\n"
	"	shr.u32 	%r16, %r50, 20;\n"
	"	add.s32 	%r51, %r16, -54;\n"
	"\n"
	"BB13_2:\n"
	"	add.s32 	%r52, %r51, -1023;\n"
	"	and.b32  	%r17, %r50, -2146435073;\n"
	"	or.b32  	%r18, %r17, 1072693248;\n"
	"	mov.b64 	%fd135, {%r49, %r18};\n"
	"	setp.lt.u32	%p2, %r18, 1073127583;\n"
	"	@%p2 bra 	BB13_4;\n"
	"\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r19, %temp}, %fd135;\n"
	"	}\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r20}, %fd135;\n"
	"	}\n"
	"	add.s32 	%r21, %r20, -1048576;\n"
	"	mov.b64 	%fd135, {%r19, %r21};\n"
	"	add.s32 	%r52, %r51, -1022;\n"
	"\n"
	"BB13_4:\n"
	"	add.f64 	%fd14, %fd135, 0d3FF0000000000000;\n"
	"	rcp.approx.ftz.f64 	%fd15, %fd14;\n"
	"	neg.f64 	%fd16, %fd14;\n"
	"	mov.f64 	%fd17, 0d3FF0000000000000;\n"
	"	fma.rn.f64 	%fd18, %fd16, %fd15, %fd17;\n"
	"	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;\n"
	"	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;\n"
	"	add.f64 	%fd21, %fd135, 0dBFF0000000000000;\n"
	"	mul.f64 	%fd22, %fd21, %fd20;\n"
	"	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;\n"
	"	mul.f64 	%fd24, %fd23, %fd23;\n"
	"	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;\n"
	"	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;\n"
	"	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;\n"
	"	mov.f64 	%fd28, 0d3EF3B20A75488A3F;\n"
	"	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;\n"
	"	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;\n"
	"	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;\n"
	"	mov.f64 	%fd32, 0d3F3C71C7258A578B;\n"
	"	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;\n"
	"	mov.f64 	%fd34, 0d3F6249249242B910;\n"
	"	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;\n"
	"	mov.f64 	%fd36, 0d3F89999999999DFB;\n"
	"	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;\n"
	"	sub.f64 	%fd38, %fd21, %fd23;\n"
	"	add.f64 	%fd39, %fd38, %fd38;\n"
	"	neg.f64 	%fd40, %fd23;\n"
	"	fma.rn.f64 	%fd41, %fd40, %fd21, %fd39;\n"
	"	mul.f64 	%fd42, %fd20, %fd41;\n"
	"	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;\n"
	"	mov.f64 	%fd44, 0d3FB5555555555555;\n"
	"	sub.f64 	%fd45, %fd44, %fd43;\n"
	"	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;\n"
	"	add.f64 	%fd47, %fd46, 0d0000000000000000;\n"
	"	add.f64 	%fd48, %fd47, 0dBC46A4CB00B9E7B0;\n"
	"	add.f64 	%fd49, %fd43, %fd48;\n"
	"	sub.f64 	%fd50, %fd43, %fd49;\n"
	"	add.f64 	%fd51, %fd48, %fd50;\n"
	"	mul.rn.f64 	%fd52, %fd23, %fd23;\n"
	"	neg.f64 	%fd53, %fd52;\n"
	"	fma.rn.f64 	%fd54, %fd23, %fd23, %fd53;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r22, %temp}, %fd42;\n"
	"	}\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r23}, %fd42;\n"
	"	}\n"
	"	add.s32 	%r24, %r23, 1048576;\n"
	"	mov.b64 	%fd55, {%r22, %r24};\n"
	"	fma.rn.f64 	%fd56, %fd23, %fd55, %fd54;\n"
	"	mul.rn.f64 	%fd57, %fd52, %fd23;\n"
	"	neg.f64 	%fd58, %fd57;\n"
	"	fma.rn.f64 	%fd59, %fd52, %fd23, %fd58;\n"
	"	fma.rn.f64 	%fd60, %fd52, %fd42, %fd59;\n"
	"	fma.rn.f64 	%fd61, %fd56, %fd23, %fd60;\n"
	"	mul.rn.f64 	%fd62, %fd49, %fd57;\n"
	"	neg.f64 	%fd63, %fd62;\n"
	"	fma.rn.f64 	%fd64, %fd49, %fd57, %fd63;\n"
	"	fma.rn.f64 	%fd65, %fd49, %fd61, %fd64;\n"
	"	fma.rn.f64 	%fd66, %fd51, %fd57, %fd65;\n"
	"	add.f64 	%fd67, %fd62, %fd66;\n"
	"	sub.f64 	%fd68, %fd62, %fd67;\n"
	"	add.f64 	%fd69, %fd66, %fd68;\n"
	"	add.f64 	%fd70, %fd23, %fd67;\n"
	"	sub.f64 	%fd71, %fd23, %fd70;\n"
	"	add.f64 	%fd72, %fd67, %fd71;\n"
	"	add.f64 	%fd73, %fd69, %fd72;\n"
	"	add.f64 	%fd74, %fd42, %fd73;\n"
	"	add.f64 	%fd75, %fd70, %fd74;\n"
	"	sub.f64 	%fd76, %fd70, %fd75;\n"
	"	add.f64 	%fd77, %fd74, %fd76;\n"
	"	xor.b32  	%r25, %r52, -2147483648;\n"
	"	mov.u32 	%r26, -2147483648;\n"
	"	mov.u32 	%r27, 1127219200;\n"
	"	mov.b64 	%fd78, {%r25, %r27};\n"
	"	mov.b64 	%fd79, {%r26, %r27};\n"
	"	sub.f64 	%fd80, %fd78, %fd79;\n"
	"	mov.f64 	%fd81, 0d3FE62E42FEFA39EF;\n"
	"	fma.rn.f64 	%fd82, %fd80, %fd81, %fd75;\n"
	"	neg.f64 	%fd83, %fd80;\n"
	"	fma.rn.f64 	%fd84, %fd83, %fd81, %fd82;\n"
	"	sub.f64 	%fd85, %fd84, %fd75;\n"
	"	sub.f64 	%fd86, %fd77, %fd85;\n"
	"	mov.f64 	%fd87, 0d3C7ABC9E3B39803F;\n"
	"	fma.rn.f64 	%fd88, %fd80, %fd87, %fd86;\n"
	"	add.f64 	%fd89, %fd82, %fd88;\n"
	"	sub.f64 	%fd90, %fd82, %fd89;\n"
	"	add.f64 	%fd91, %fd88, %fd90;\n"
	"	mov.f64 	%fd92, 0d4000000000000000;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r28}, %fd92;\n"
	"	}\n"
	"	add.s32 	%r29, %r28, %r28;\n"
	"	setp.gt.u32	%p3, %r29, -33554433;\n"
	"	and.b32  	%r30, %r28, -15728641;\n"
	"	selp.b32	%r31, %r30, %r28, %p3;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r32, %temp}, %fd92;\n"
	"	}\n"
	"	mov.b64 	%fd93, {%r32, %r31};\n"
	"	mul.rn.f64 	%fd94, %fd89, %fd93;\n"
	"	neg.f64 	%fd95, %fd94;\n"
	"	fma.rn.f64 	%fd96, %fd89, %fd93, %fd95;\n"
	"	fma.rn.f64 	%fd97, %fd91, %fd93, %fd96;\n"
	"	add.f64 	%fd4, %fd94, %fd97;\n"
	"	sub.f64 	%fd98, %fd94, %fd4;\n"
	"	add.f64 	%fd5, %fd97, %fd98;\n"
	"	mov.f64 	%fd99, 0d4338000000000000;\n"
	"	mov.f64 	%fd100, 0d3FF71547652B82FE;\n"
	"	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r13, %temp}, %fd101;\n"
	"	}\n"
	"	mov.f64 	%fd102, 0dC338000000000000;\n"
	"	add.rn.f64 	%fd103, %fd101, %fd102;\n"
	"	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;\n"
	"	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;\n"
	"	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;\n"
	"	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;\n"
	"	mov.f64 	%fd108, 0d3E928AF3FCA213EA;\n"
	"	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;\n"
	"	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;\n"
	"	mov.f64 	%fd111, 0d3EC71DEE62401315;\n"
	"	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;\n"
	"	mov.f64 	%fd113, 0d3EFA01997C89EB71;\n"
	"	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;\n"
	"	mov.f64 	%fd115, 0d3F2A01A014761F65;\n"
	"	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;\n"
	"	mov.f64 	%fd117, 0d3F56C16C1852B7AF;\n"
	"	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;\n"
	"	mov.f64 	%fd119, 0d3F81111111122322;\n"
	"	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;\n"
	"	mov.f64 	%fd121, 0d3FA55555555502A1;\n"
	"	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;\n"
	"	mov.f64 	%fd123, 0d3FC5555555555511;\n"
	"	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;\n"
	"	mov.f64 	%fd125, 0d3FE000000000000B;\n"
	"	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;\n"
	"	fma.rn.f64 	%fd127, %fd126, %fd107, %fd17;\n"
	"	fma.rn.f64 	%fd128, %fd127, %fd107, %fd17;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r14, %temp}, %fd128;\n"
	"	}\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r15}, %fd128;\n"
	"	}\n"
	"	shl.b32 	%r33, %r13, 20;\n"
	"	add.s32 	%r34, %r15, %r33;\n"
	"	mov.b64 	%fd136, {%r14, %r34};\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r35}, %fd4;\n"
	"	}\n"
	"	mov.b32 	 %f2, %r35;\n"
	"	abs.f32 	%f1, %f2;\n"
	"	setp.lt.f32	%p4, %f1, 0f4086232B;\n"
	"	@%p4 bra 	BB13_7;\n"
	"\n"
	"	setp.lt.f64	%p5, %fd4, 0d0000000000000000;\n"
	"	add.f64 	%fd129, %fd4, 0d7FF0000000000000;\n"
	"	selp.f64	%fd136, 0d0000000000000000, %fd129, %p5;\n"
	"	setp.geu.f32	%p6, %f1, 0f40874800;\n"
	"	@%p6 bra 	BB13_7;\n"
	"\n"
	"	mov.f64 	%fd134, 0d4338000000000000;\n"
	"	mov.f64 	%fd133, 0d3FF71547652B82FE;\n"
	"	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r48, %temp}, %fd132;\n"
	"	}\n"
	"	shr.u32 	%r36, %r48, 31;\n"
	"	add.s32 	%r37, %r48, %r36;\n"
	"	shr.s32 	%r38, %r37, 1;\n"
	"	shl.b32 	%r39, %r38, 20;\n"
	"	add.s32 	%r40, %r39, %r15;\n"
	"	mov.b64 	%fd130, {%r14, %r40};\n"
	"	sub.s32 	%r41, %r48, %r38;\n"
	"	shl.b32 	%r42, %r41, 20;\n"
	"	add.s32 	%r43, %r42, 1072693248;\n"
	"	mov.u32 	%r44, 0;\n"
	"	mov.b64 	%fd131, {%r44, %r43};\n"
	"	mul.f64 	%fd136, %fd130, %fd131;\n"
	"\n"
	"BB13_7:\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%temp, %r45}, %fd136;\n"
	"	}\n"
	"	and.b32  	%r46, %r45, 2147483647;\n"
	"	setp.ne.s32	%p7, %r46, 2146435072;\n"
	"	@%p7 bra 	BB13_9;\n"
	"\n"
	"	{\n"
	"	.reg .b32 %temp; \n"
	"	mov.b64 	{%r47, %temp}, %fd136;\n"
	"	}\n"
	"	setp.eq.s32	%p8, %r47, 0;\n"
	"	@%p8 bra 	BB13_10;\n"
	"\n"
	"BB13_9:\n"
	"	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;\n"
	"\n"
	"BB13_10:\n"
	"	st.param.f64	[func_retval0+0], %fd136;\n"
	"	ret;\n"
	"}\n"
	"\n"
	"\n"
;

